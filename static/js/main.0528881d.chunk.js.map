{"version":3,"sources":["components/customCard/CustomCardCheck.js","components/elements/basement/basementDo.js","assets/svg-white/005-kitchen.svg","components/Sidebar.js","assets/logo-2.svg","components/header/header.js","components/elements/basement/Basement.js","components/customCard/CustomCardRadio.js","components/elements/bathroom/Type.js","components/elements/bathroom/change.js","components/elements/bathroom/Design.js","components/elements/bathroom/Bathroom.js","components/elements/exteriorSiding/Type.js","assets/fiberboard.svg","assets/vinyl.svg","assets/brick.svg","assets/aluminium.svg","assets/canexel.svg","assets/wood.svg","assets/stone.svg","components/elements/exteriorSiding/ExteriorSiding.js","components/elements/flooring/Type.js","components/elements/flooring/Flooring.js","assets/kitchen.svg","assets/basement.svg","assets/livingroom.svg","assets/bathroom.svg","assets/bedroom.svg","assets/diningroom.svg","components/elements/interiorDesign/room.js","assets/plancreation.svg","assets/choiceofmaterials.svg","assets/colourscheme.svg","assets/furnishings.svg","assets/coordination.svg","components/elements/interiorDesign/services.js","components/elements/interiorDesign/InteriorDesign.js","components/elements/kitchen/Planning.js","assets/svg-white/009-house.svg","components/elements/kitchen/Shape.js","components/elements/kitchen/Parts.js","components/elements/kitchen/Kitchen.js","components/elements/painting/paintNeed.js","components/elements/painting/Painting.js","components/elements/roofing/roofType.js","components/elements/roofing/Slope.js","components/elements/roofing/Roofing.js","components/elements/windows/materialType.js","components/elements/windows/windowSize.js","assets/Size.svg","components/elements/windows/Number.js","components/elements/windows/Windows.js","assets/conf item/008-windows.svg","assets/conf item/009-roof.svg","assets/conf item/007-draws.svg","assets/conf item/004-basement.svg","assets/conf item/005-kitchen.svg","assets/conf item/006-bathtub.svg","assets/conf item/003-paint-roller.svg","assets/interior.svg","assets/svg-white/exterior.svg","components/Select.js","assets/005-architect.svg","components/Confirm.js","assets/conf item/002-interior-design.svg","components/Size.js","components/Material.js","assets/windows.svg","assets/roofing.svg","assets/flooring.svg","assets/painting.svg","assets/exterior.svg","components/SelectedForm.js","containers/Home.js","containers/App.js","reportWebVitals.js","index.js"],"names":["CustomCardCheck","this","props","img","Title","className","src","alt","Component","BasementDo","continue","e","preventDefault","nextStep","back","prevStep","handleCheck","complete","partial","Typography","variant","type","value","onChange","Button","color","onClick","Sidebar","handleReset","setState","step","Stepper","activeStep","stepper","alternativeLabel","scrollTop","stepperList","map","label","Step","StepLabel","header","AppBar","position","class","href","logo2","Toolbar","Basement","inNextStep","inStep","state","gotoConfirm","inPrevStep","values","option","renderSidebar","renderSwitch","CustomCardRadio","Type","onValueChange","checked","Change","Design","Bathroom","renovation_type","images","ExteriorSiding","componentDidMount","window","addEventListener","handleScroll","event","scrollY","gotoSize","fiberboard","wood","brick","vinyl","aluminium","canexel","stone","Flooring","room","kitchen","basement","livingroom","bathroom","bedroom","diningroom","services","plancreation","choiceofmaterials","colourscheme","furnishings","coordination","InteriorDesign","uniqrooms","uniqservices","Planning","Shape","exteriorSiding","Parts","Kitchen","PaintNeed","Painting","roofType","Slope","Roofings","roof_type","MaterialType","WindowSize","Number","TextField","fullWidth","id","InputLabelProps","shrink","SizePic","Windows","NativeSelects","renderList","selected","content","i","length","item","push","pop","itemList","question","handleChange","name","target","icons","category","exterior","flooring","interior","painting","roofing","windows","renderTitle","renderItems","data","shape","materials","size","uniqOptions","design","siding","rooms","material","count","Questionicons","createList","datas","project","bind","console","log","FormControl","InputLabel","htmlFor","Select","native","inputProps","items","Confirm","gotoStep2","extract_data","parts","slope","reset","add","estimate","request_data","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","estimated","total_cost","renderBackBtn","Size","disabled","Material","SelectedForm","Fragment","Home","clearState","options_checked","options","uniqs","filter","index","indexOf","undefined","nextProps","nextState","other","Roofing","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0528881d.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nimport './CustomCardCheck.css';\nimport './CustomCardCheck.scss';\n\nclass CustomCardCheck extends Component {\n\n    render() {    \n        const { img, Title } = this.props;\n        return (\n            <div className = \"itemForCheck\">\n                <div className=\"item-img\">\n                    <img className=\"images\" src={img} alt=\"mast dg\" />\n                </div>\n                <p className=\"item-subtitle\">{Title}</p>\n            </div>\n        )\n    }\n}\n\nexport default CustomCardCheck","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport CustomCardCheck from '../../customCard/CustomCardCheck';\nimport Typography from '@material-ui/core/Typography';\n\nimport '../elements.css';\n\nexport class BasementDo extends Component {\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back  = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render() {\n        const { handleCheck, complete, partial} = this.props;\n\n        return (\n            <div>\n                <div className=\"main\">\n                    <div className=\"main-box\">\n                        <div className=\"container space-2 space-md-3\">\n                            <div className=\"steps\">\n                                <div className=\"main-screen\">\n                                    <br />\n                                    <Typography variant=\"h4\" className=\"title font-weight-bold\">\n                                        What do you want to do in your basement?\n                                    </Typography>\n                                    <Typography variant=\"h5\" className=\"subTitle font-weight-light\">\n                                        you may select multiple options \n                                    </Typography>\n                                    <br />\n                                    <div className=\"allItems\">\n                                        <label>\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"painting\"                            \n                                            onChange={handleCheck(\"painting\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={complete} \n                                            Title={\"painting\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"flooring\"                            \n                                            onChange={handleCheck(\"flooring\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={partial} \n                                            Title={\"flooring\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"kitchen\"                            \n                                            onChange={handleCheck(\"kitchen\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={partial} \n                                            Title={\"kitchen\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"bathroom\"                            \n                                            onChange={handleCheck(\"bathroom\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={complete} \n                                            Title={\"bathroom\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"livingroom\"                            \n                                            onChange={handleCheck(\"livingroom\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={partial} \n                                            Title={\"living room\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"room\"                            \n                                            onChange={handleCheck(\"room\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={partial} \n                                            Title={\"room\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"exteriorexit\"                            \n                                            onChange={handleCheck(\"exteriorexit\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={partial} \n                                            Title={\"exterior exit\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <div className=\"fotter-back\">\n                                            <Button \n                                                variant=\"contained\"\n                                                color=\"primary\" \n                                                className = \"footer-btn-back\"\n                                                onClick = {this.back}\n                                                >\n                                                Back\n                                            </Button>\n                                        </div>\n                                        <div className=\"fotter\">\n                                            <Button \n                                                variant=\"contained\"\n                                                color=\"primary\" \n                                                className = \"footer-btn\"\n                                                onClick = {this.continue}\n                                                >\n                                                Continue\n                                            </Button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default BasementDo\n","export default __webpack_public_path__ + \"static/media/005-kitchen.0cdb2171.svg\";","import React, { Component } from 'react';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\n\nimport './Sidebar.css'\n\nexport class Sidebar extends Component {\n\n  handleReset = () => {\n    this.setState({\n        step: 1,\n    })\n  };\n\n\n  render() {\n\n    // console.log(this.props.scrollTop)\n\n    return (\n      <div className=\"template\">\n        <Stepper activeStep={this.props.stepper} alternativeLabel={this.props.scrollTop} className=\"sidenav\">\n        {this.props.stepperList.map((label) => (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n      </div>\n    )\n  }\n}\n\nexport default Sidebar","export default __webpack_public_path__ + \"static/media/logo-2.091aba13.svg\";","import React, {Component} from 'react'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport logo2 from \"../../assets/logo-2.svg\";\n\nimport './header.css';\n\nexport class header extends Component {\n    render() {\n        return (\n            <AppBar position=\"static\" className=\"head\">\n                <div class=\"head-wraper\">\n                    <a class=\"header-logo\" href=\"#\">\n                        <img src={logo2} alt=\"Logo\"/>\n                    </a>\n                    <Toolbar variant=\"dense\" class=\"header-title-wraper\">\n                        <Typography variant=\"h5\" color=\"inherit\" className=\"header-title\">\n                        {this.props.Title}\n                        </Typography>\n                    </Toolbar>\n                </div>\n            </AppBar>\n        )\n    }\n}\n\nexport default header\n","import React, { Component } from 'react';\n\nimport BasementDo from './basementDo';\n\nimport complete from '../../../assets/svg-white/005-kitchen.svg';\nimport partial from '../../../assets/svg-white/005-kitchen.svg';\n\nimport '../elements.css';\nimport Sidebar from '../../Sidebar';\nimport Header from '../../header/header';\n\nexport class Basement extends Component {\n    \n    constructor(){\n        super();\n        this.state = {\n            inStep: 1,\n        };    \n    }\n\n    inNextStep = () =>  {\n        this.props.nextStep()\n    }\n\n    prevStep = () =>  {\n        const { inStep } = this.state;\n        this.setState({\n            inStep: inStep - 1\n        })\n    }\n\n    nextStep = () => {\n        this.props.gotoConfirm();\n    }\n\n    //Proced to Prev step\n    inPrevStep = () => {\n        this.props.prevStep();\n    }\n    \n    renderSidebar (inStep) {\n        if (inStep === 1) {\n            return(\n                <Sidebar\n                stepper = {0}\n                stepperList = {['Basement Work', 'material type', 'Basement size']}\n                ></Sidebar>\n            )\n        }\n    }\n\n\n    renderSwitch(inStep, values, handleCheck) {\n        switch (inStep) {\n            case 1:\n                return(\n\n                    <BasementDo \n                    nextStep = {this.inNextStep}\n                    prevStep = {this.inPrevStep}\n                    handleCheck = {handleCheck}\n                    values = {values}\n                    complete = {complete}\n                    partial = {partial}\n                    ></BasementDo>\n                );\n            default:\n                break;\n        }\n      }\n\n    render() {\n\n        const { inStep } = this.state;\n        const { option, handleCheck } = this.props;\n        const values = { option };\n\n        return (\n            <div>\n                <Header Title=\"Renestek Cost Estimator\"></Header>\n                {this.renderSidebar(inStep)}\n                {this.renderSwitch(inStep, values, handleCheck)}\n            </div>\n          );\n        \n    }\n}\n\nexport default Basement\n","import React, { Component } from 'react'\n\nimport './CustomCardRadio.css';\nimport './CustomCardRadio.scss';\n\nclass CustomCardRadio extends Component {\n\n    render() {    \n        const { img, Title } = this.props;\n        return (\n            <div className = \"item\">\n                <div className=\"item-img\">\n                    <img className=\"images\" src={img} alt=\"mast dg\" />\n                </div>\n                <p className=\"item-subtitle \">{Title}</p>\n            </div>\n        )\n    }\n}\n\nexport default CustomCardRadio","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport CustomCardRadio from '../../customCard/CustomCardRadio';\nimport Typography from '@material-ui/core/Typography';\n\nimport '../elements.css';\n\nexport class Type extends Component {\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back  = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render() {\n        const { values, onValueChange, complete, partial} = this.props;\n\n        return (\n            <div>\n                <div className=\"main\">\n                    <div className=\"main-box\">\n                        <div className=\"container space-2 space-md-3\">\n                            <div className=\"steps\">\n                                <div className=\"main-screen\">\n                                    <br />\n                                    <Typography variant=\"h4\" className=\"title font-weight-bold Title-elements\">\n                                        What type of renovation are you planning?\n                                    </Typography>\n                                    <br />\n                                    <div className=\"allItems\">\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"completeRemodel\"                            \n                                            onChange={onValueChange(\"renovation_type\")} \n                                            checked={values.option === \"completeRemodel\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={complete} \n                                            Title={\"complete Remodel\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"partialRemodel\"                            \n                                            onChange={onValueChange(\"renovation_type\")} \n                                            checked={values.option === \"partialRemodel\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={partial} \n                                            Title={\"partial Remodel\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <div className=\"fotter-back\">\n                                            <Button \n                                                variant=\"contained\"\n                                                color=\"primary\" \n                                                className = \"footer-btn-back\"\n                                                onClick = {this.back}\n                                                >\n                                                Back\n                                            </Button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Type\n","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport CustomCardCheck from '../../customCard/CustomCardCheck';\nimport Typography from '@material-ui/core/Typography';\n\nimport '../elements.css';\n\nexport class Change extends Component {\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back  = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render() {\n        const { handleCheck, complete, partial} = this.props;\n\n        return (\n            <div>\n                <div className=\"main\">\n                    <div className=\"main-box\">\n                        <div className=\"container space-2 space-md-3\">\n                            <div className=\"steps\">\n                                <div className=\"main-screen\">\n                                    <br />\n                                    <Typography variant=\"h4\" className=\"title font-weight-bold\">\n                                        What do you need to paint?\n                                    </Typography>\n                                    <Typography variant=\"h5\" className=\"subTitle font-weight-light\">\n                                        you may select multiple options \n                                    </Typography>\n                                    <br />\n                                    <div className=\"allItems\">\n                                        <label>\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"bath\"                            \n                                            onChange={handleCheck(\"bath\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={complete} \n                                            Title={\"bath\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"shower\"                            \n                                            onChange={handleCheck(\"shower\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={partial} \n                                            Title={\"shower\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"toilet\"                            \n                                            onChange={handleCheck(\"toilet\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={partial} \n                                            Title={\"toilet\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"cabinets\"                            \n                                            onChange={handleCheck(\"cabinets\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={complete} \n                                            Title={\"cabinets\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"flooring\"                            \n                                            onChange={handleCheck(\"flooring\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={complete} \n                                            Title={\"flooring\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"painting\"                            \n                                            onChange={handleCheck(\"painting\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={complete} \n                                            Title={\"painting\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <div className=\"fotter-back\">\n                                            <Button \n                                                variant=\"contained\"\n                                                color=\"primary\" \n                                                className = \"footer-btn-back\"\n                                                onClick = {this.back}\n                                                >\n                                                Back\n                                            </Button>\n                                        </div>\n                                        <div className=\"fotter\">\n                                            <Button \n                                                variant=\"contained\"\n                                                color=\"primary\" \n                                                className = \"footer-btn\"\n                                                onClick = {this.continue}\n                                                >\n                                                Continue\n                                            </Button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Change\n","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport CustomCardRadio from '../../customCard/CustomCardRadio';\nimport Typography from '@material-ui/core/Typography';\n\nimport '../elements.css';\n\nexport class Design extends Component {\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back  = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render() {\n        const { values, onValueChange, complete, partial} = this.props;\n\n        return (\n            <div>\n                <div className=\"main\">\n                    <div className=\"main-box\">\n                        <div className=\"container space-2 space-md-3\">\n                            <div className=\"steps\">\n                                <div className=\"main-screen\">\n                                    <br />\n                                    <Typography variant=\"h4\" className=\"title font-weight-bold Title-elements\">\n                                        What type of renovation are you planning?\n                                    </Typography>\n                                    <br />\n                                    <div className=\"allItems\">\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"zen\"                            \n                                            onChange={onValueChange(\"design\")} \n                                            checked={values.option === \"zen\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={complete} \n                                            Title={\"zen\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"classical\"                            \n                                            onChange={onValueChange(\"design\")} \n                                            checked={values.option === \"classical\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={partial} \n                                            Title={\"classical\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"modern\"                            \n                                            onChange={onValueChange(\"design\")} \n                                            checked={values.option === \"modern\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={partial} \n                                            Title={\"modern\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"rustic\"                            \n                                            onChange={onValueChange(\"design\")} \n                                            checked={values.option === \"rustic\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={partial} \n                                            Title={\"rustic\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <div className=\"fotter-back\">\n                                            <Button \n                                                variant=\"contained\"\n                                                color=\"primary\" \n                                                className = \"footer-btn-back\"\n                                                onClick = {this.back}\n                                                >\n                                                Back\n                                            </Button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Design\n","import React, { Component } from 'react';\n\nimport Type from './Type';\nimport Change from './change';\nimport Design from './Design';\n\nimport complete from '../../../assets/svg-white/005-kitchen.svg';\nimport partial from '../../../assets/svg-white/005-kitchen.svg';\n\nimport '../elements.css';\nimport Sidebar from '../../Sidebar';\nimport Header from '../../header/header';\n\nexport class Bathroom extends Component {\n    \n    constructor(){\n        super();\n        this.state = {\n            inStep: 1,\n        };    \n    }\n\n    inNextStep = () =>  {\n        const { inStep } = this.state;\n        this.setState({\n            inStep: inStep + 1\n        })\n    }\n\n    prevStep = () =>  {\n        const { inStep } = this.state;\n        this.setState({\n            inStep: inStep - 1\n        })\n    }\n\n    nextStep = () => {\n        this.props.nextStep();\n    }\n\n    //Proced to Prev step\n    inPrevStep = () => {\n        this.props.prevStep();\n    }\n    \n    renderSidebar (inStep) {\n        if (inStep === 1) {\n            return(\n                <Sidebar\n                stepper = {0}\n                stepperList = {['renovation planning', '???','material type','bathroom size']}\n                ></Sidebar>\n            )\n        } else if ( this.props.values.renovation_type === \"partialRemodel\" ) {\n            return(\n                <Sidebar\n                stepper = {1}\n                stepperList = {['renovation planning', 'change','material type','bathroom size']}\n                ></Sidebar>\n            )\n        } else {\n            return(\n                <Sidebar\n                stepper = {1}\n                stepperList = {['renovation planning', 'Design','material type','bathroom size']}\n                ></Sidebar>\n            )\n        }\n    }\n\n    renderSwitch(inStep, values, onValueChange, handleCheck) {\n        switch (inStep) {\n            case 1:\n                return(\n                    <Type \n                    nextStep = {this.inNextStep}\n                    prevStep = {this.inPrevStep}\n                    onValueChange = {onValueChange}\n                    values = {values}\n                    complete = {complete}\n                    partial = {partial}\n                    ></Type>\n                );\n            case 2:\n                if (this.props.values.renovation_type === \"partialRemodel\") {\n                    return(\n                        <Change\n                        nextStep = {this.nextStep}\n                        prevStep = {this.prevStep}\n                        handleCheck = {handleCheck}\n                        values = {values}\n                        complete = {complete}\n                        partial = {partial}\n                        ></Change>\n                    )\n                } else {\n                    return(\n                        <Design\n                        nextStep = {this.nextStep}\n                        prevStep = {this.prevStep}\n                        handleCheck = {handleCheck}\n                        onValueChange = {onValueChange}\n                        values = {values}\n                        complete = {complete}\n                        partial = {partial}\n                        ></Design>\n                    )\n                }\n            default:\n                break;\n        }\n      }\n\n    render() {\n\n        const { inStep } = this.state;\n        const { option, onValueChange, handleCheck } = this.props;\n        const values = { option };\n\n        return (\n            <div>\n                <Header Title=\"Renestek Cost Estimator\"></Header>\n                {this.renderSidebar(inStep)}\n                {this.renderSwitch(inStep, values, onValueChange, handleCheck)}\n            </div>\n          );\n        \n    }\n}\n\nexport default Bathroom\n","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport CustomCardRadio from '../../customCard/CustomCardRadio';\nimport Typography from '@material-ui/core/Typography';\n\nimport '../elements.css';\n\nexport class Type extends Component {\n\n\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back  = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render() {\n        const { values, onValueChange, images} = this.props;\n        return (\n                <div className=\"main\">\n                    <div className=\"main-box\">\n                        <div className=\"container space-2 space-md-3\">\n                            <div className=\"steps\">\n                                <div className=\"main-screen\">\n                                    <br />\n                                    <Typography variant=\"h4\" className=\"title font-weight-bold Title-elements\">\n                                    What type of siding are you looking for?\n                                    </Typography>\n                                    <br />\n                                    <div className=\"allItems\">\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"Fiberboard\"                            \n                                            onChange={onValueChange(\"siding\")} \n                                            checked={values.option === \"fiberboard\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={images[0]} \n                                            Title={\"Fiberboard\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"Wood\"                            \n                                            onChange={onValueChange(\"siding\")} \n                                            checked={values.option === \"wood\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={images[1]} \n                                            Title={\"Wood\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"Brick\"                            \n                                            onChange={onValueChange(\"siding\")} \n                                            checked={values.option === \"brick\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={images[2]} \n                                            Title={\"Brick\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"Vinyl\"                            \n                                            onChange={onValueChange(\"siding\")} \n                                            checked={values.option === \"vinyl\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={images[3]} \n                                            Title={\"Vinyl\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"Aluminium\"                            \n                                            onChange={onValueChange(\"siding\")} \n                                            checked={values.option === \"aluminium\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={images[4]} \n                                            Title={\"Aluminium\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"Stone\"                            \n                                            onChange={onValueChange(\"siding\")} \n                                            checked={values.option === \"stone\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={images[6]} \n                                            Title={\"Stone\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"CanExel (wood fibre)\"                            \n                                            onChange={onValueChange(\"siding\")} \n                                            checked={values.option === \"canexel\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={images[5]} \n                                            Title={\"Can Exel\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <div className=\"fotter-back\">\n                                            <Button \n                                                variant=\"contained\"\n                                                color=\"primary\" \n                                                className = \"footer-btn-back\"\n                                                onClick = {this.back}\n                                                >\n                                                Back\n                                            </Button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n        )\n    }\n}\n\nexport default Type\n","export default __webpack_public_path__ + \"static/media/fiberboard.60cbd110.svg\";","export default __webpack_public_path__ + \"static/media/vinyl.6de989ff.svg\";","export default __webpack_public_path__ + \"static/media/brick.7548f4e7.svg\";","export default __webpack_public_path__ + \"static/media/aluminium.35c337d4.svg\";","export default __webpack_public_path__ + \"static/media/canexel.2b179956.svg\";","export default __webpack_public_path__ + \"static/media/wood.984794b7.svg\";","export default __webpack_public_path__ + \"static/media/stone.9f46a3c7.svg\";","import React, { Component } from 'react';\n\nimport Type from './Type';\n\nimport fiberboard from '../../../assets/fiberboard.svg';\nimport vinyl from '../../../assets/vinyl.svg';\nimport brick from '../../../assets/brick.svg';\nimport aluminium from '../../../assets/aluminium.svg';\nimport canexel from '../../../assets/canexel.svg';\nimport wood from '../../../assets/wood.svg';\nimport stone from '../../../assets/stone.svg';\n\nimport '../elements.css';\nimport Sidebar from '../../Sidebar';\nimport Header from '../../header/header';\n\nexport class ExteriorSiding extends Component {\n    \n    constructor(){\n        super();\n\n        let scrollTop = window.scrollY < 50\n\n        this.state = {\n            inStep: 1,\n            scrollTop: scrollTop,\n        };    \n    }\n\n    componentDidMount = () => {\n        window.addEventListener('scroll', this.handleScroll, true);\n    }\n    \n    handleScroll = (event) => {\n        let scrollTop = window.scrollY < 50\n\n        this.setState({\n            scrollTop: scrollTop\n        });\n    }\n\n    nextStep = () => {\n        this.props.gotoSize();\n    }\n\n    //Proced to Prev step\n    inPrevStep = () => {\n        this.props.prevStep();\n    }\n    \n    renderSidebar (scrollTop) {\n        return(\n            <Sidebar\n            stepper = {0}\n            stepperList = {['Type of Siding ','Surface Area']}\n            scrollTop = {scrollTop}\n            ></Sidebar>\n        )\n    }\n\n    renderSwitch(inStep, values, onValueChange) {\n        switch (inStep) {\n            case 1:\n                return(\n                    <Type \n                    nextStep = {this.nextStep}\n                    prevStep = {this.inPrevStep}\n                    onValueChange = {onValueChange}\n                    values = {values}\n                    images = {[fiberboard, wood, brick, vinyl, aluminium, canexel, stone ]}\n                    ></Type>\n                );\n            default:\n                break;\n        }\n      }\n\n    render() {\n\n        const { inStep , scrollTop } = this.state;\n        const { onValueChange , option } = this.props;\n        const values = { option };\n\n        return (\n            <div>\n                <Header Title=\"Renestek Price Prediction\"></Header>\n                {this.renderSidebar(scrollTop)}\n                {this.renderSwitch(inStep, values , onValueChange)}\n            </div>\n        );\n        \n    }\n}\n\nexport default ExteriorSiding\n","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport CustomCardRadio from '../../customCard/CustomCardRadio';\nimport Typography from '@material-ui/core/Typography';\n\nimport '../elements.css';\n\nexport class Type extends Component {\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back  = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render() {\n        const { values, onValueChange, partial} = this.props;\n\n        return (\n            <div>\n                {/* <Header Title=\"Planning\"></Header> */}\n                <div className=\"main\">\n                    <div className=\"main-box\">\n                        <div className=\"container space-2 space-md-3\">\n                            <div className=\"steps\">\n                                <div className=\"main-screen\">\n                                    <br />\n                                    <Typography variant=\"h4\" className=\"title font-weight-bold Title-elements\">\n                                    What type of siding are you looking for?\n                                    </Typography>\n                                    <br />\n                                    <div className=\"allItems\">\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"hardwood\"                            \n                                            onChange={onValueChange(\"type\")} \n                                            checked={values.option === \"hardwood\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={partial} \n                                            Title={\"hardwood\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"floating\"                            \n                                            onChange={onValueChange(\"type\")} \n                                            checked={values.option === \"floating\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={partial} \n                                            Title={\"floating\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"linoleumorvinyl\"                            \n                                            onChange={onValueChange(\"type\")} \n                                            checked={values.option === \"linoleumorvinyl\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={partial} \n                                            Title={\"linoleum / vinyl\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"tiles\"                            \n                                            onChange={onValueChange(\"type\")} \n                                            checked={values.option === \"tiles\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={partial} \n                                            Title={\"tiles\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <div className=\"fotter-back\">\n                                            <Button \n                                                variant=\"contained\"\n                                                color=\"primary\" \n                                                className = \"footer-btn-back\"\n                                                onClick = {this.back}\n                                                >\n                                                Back\n                                            </Button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Type\n","import React, { Component } from 'react';\n\nimport Type from './Type';\n\nimport partial from '../../../assets/svg-white/005-kitchen.svg';\n\nimport '../elements.css';\nimport Sidebar from '../../Sidebar';\nimport Header from '../../header/header';\n\nexport class Flooring extends Component {\n    \n    constructor(){\n        super();\n        this.state = {\n            inStep: 1,\n        };    \n    }\n\n    nextStep = () => {\n        this.props.nextStep();\n    }\n\n    //Proced to Prev step\n    inPrevStep = () => {\n        this.props.prevStep();\n    }\n    \n    renderSidebar () {\n        return(\n            <Sidebar\n            stepper = {0}\n            stepperList = {['Floor Type','Material Type','Floor Size']}\n            ></Sidebar>\n        )\n    }\n\n    renderSwitch(inStep, values, onValueChange) {\n        switch (inStep) {\n            case 1:\n                return(\n                    <Type \n                    nextStep = {this.nextStep}\n                    prevStep = {this.inPrevStep}\n                    onValueChange = {onValueChange}\n                    values = {values}\n                    partial = {partial}\n                    ></Type>\n                );\n            default:\n                break;\n        }\n      }\n\n    render() {\n\n        const { inStep } = this.state;\n        const { option , onValueChange} = this.props;\n        const values = { option };\n\n        return (\n            <div>\n                <Header Title=\"Renestek Cost Estimator\"></Header>\n                {this.renderSidebar(inStep)}\n                {this.renderSwitch(inStep, values, onValueChange)}\n            </div>\n          );\n        \n    }\n}\n\nexport default Flooring\n","export default __webpack_public_path__ + \"static/media/kitchen.05983cff.svg\";","export default __webpack_public_path__ + \"static/media/basement.0d44be02.svg\";","export default __webpack_public_path__ + \"static/media/livingroom.cc34c2ea.svg\";","export default __webpack_public_path__ + \"static/media/bathroom.d63d68a4.svg\";","export default __webpack_public_path__ + \"static/media/bedroom.b5f2a6ba.svg\";","export default __webpack_public_path__ + \"static/media/diningroom.f962a811.svg\";","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport CustomCardCheck from '../../customCard/CustomCardCheck';\nimport Typography from '@material-ui/core/Typography';\n\nimport kitchen from '../../../assets/kitchen.svg';\nimport basement from '../../../assets/basement.svg';\nimport livingroom from '../../../assets/livingroom.svg';\nimport bathroom from '../../../assets/bathroom.svg';\nimport bedroom from '../../../assets/bedroom.svg';\nimport diningroom from '../../../assets/diningroom.svg';\n\nimport '../elements.css';\n\nexport class room extends Component {\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back  = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render() {\n        const { handleCheck } = this.props;\n\n        return (\n                <div className=\"main\">\n                    <div className=\"main-box\">\n                        <div className=\"container space-2 space-md-3\">\n                            <div className=\"steps\">\n                                <div className=\"main-screen\">\n                                    <br />\n                                    <Typography variant=\"h4\" className=\"title font-weight-bold\">\n                                        Which rooms do you wish to redesign?\n                                    </Typography>\n                                    <Typography variant=\"h5\" className=\"subTitle font-weight-light\">\n                                        you may select multiple options \n                                    </Typography>\n                                    <br />\n                                    <div className=\"allItems\">\n                                        <label className=\"itemsCheck\">\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"Kitchen\"                            \n                                            onChange={handleCheck(\"kitchen\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={kitchen} \n                                            Title={\"kitchen\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <label className=\"itemsCheck\">\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"Basement\"                            \n                                            onChange={handleCheck(\"basement\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={basement} \n                                            Title={\"basement\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <label className=\"itemsCheck\">\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"Living Room\"                            \n                                            onChange={handleCheck(\"livingroom\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={livingroom} \n                                            Title={\"Living Room\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <label className=\"itemsCheck\">\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"Bathroom\"                            \n                                            onChange={handleCheck(\"bathroom\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={bathroom} \n                                            Title={\"bathroom\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <label className=\"itemsCheck\">\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"Room\"                            \n                                            onChange={handleCheck(\"room\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={bedroom} \n                                            Title={\"room\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <label className=\"itemsCheck\">\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"Dining room\"                            \n                                            onChange={handleCheck(\"diningroom\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={diningroom} \n                                            Title={\"Dinning Room\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <div className=\"fotter-back\">\n                                            <Button \n                                                variant=\"contained\"\n                                                color=\"primary\" \n                                                className = \"footer-btn-back\"\n                                                onClick = {this.back}\n                                                >\n                                                Back\n                                            </Button>\n                                        </div>\n                                        <div className=\"fotter\">\n                                            <Button \n                                                variant=\"contained\"\n                                                color=\"primary\" \n                                                className = \"footer-btn\"\n                                                onClick = {this.continue}\n                                                // disabled={this.props.uniqrooms.length === 0}\n                                                >\n                                                Continue\n                                            </Button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n        )\n    }\n}\n\nexport default room\n","export default __webpack_public_path__ + \"static/media/plancreation.a265ddf5.svg\";","export default __webpack_public_path__ + \"static/media/choiceofmaterials.2d564b19.svg\";","export default __webpack_public_path__ + \"static/media/colourscheme.223cb67c.svg\";","export default __webpack_public_path__ + \"static/media/furnishings.044f8df1.svg\";","export default __webpack_public_path__ + \"static/media/coordination.5af7be13.svg\";","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport CustomCardCheck from '../../customCard/CustomCardCheck';\nimport Typography from '@material-ui/core/Typography';\n\nimport plancreation from '../../../assets/plancreation.svg';\nimport choiceofmaterials from '../../../assets/choiceofmaterials.svg';\nimport colourscheme from '../../../assets/colourscheme.svg';\nimport furnishings from '../../../assets/furnishings.svg';\nimport coordination from '../../../assets/coordination.svg';\nimport diningroom from '../../../assets/diningroom.svg';\n\nimport '../elements.css';\n\nexport class services extends Component {\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back  = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render() {\n        const { handleCheck , partial} = this.props;\n\n        return (\n                <div className=\"main\">\n                    <div className=\"main-box\">\n                        <div className=\"container space-2 space-md-3\">\n                            <div className=\"steps\">\n                                <div className=\"main-screen\">\n                                    <br />\n                                    <Typography variant=\"h4\" className=\"title font-weight-bold\">\n                                        What services are you looking for?\n                                    </Typography>\n                                    <Typography variant=\"h5\" className=\"subTitle font-weight-light\">\n                                        you may select multiple options \n                                    </Typography>\n                                    <br />\n                                    <div className=\"allItems\">\n                                        <label>\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"Plan Creation\"                            \n                                            onChange={handleCheck(\"plancreation\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={plancreation} \n                                            Title={\"Plan Creation\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"Choice of materials\"                            \n                                            onChange={handleCheck(\"choiseofmaterial\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={choiceofmaterials} \n                                            Title={\"Choice of material\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"Colour Scheme\"                            \n                                            onChange={handleCheck(\"colourscheme\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={colourscheme} \n                                            Title={\"Colour Scheme\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"Furnishings and Accessories\"                            \n                                            onChange={handleCheck(\"furnishingsandaccessories\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={furnishings} \n                                            Title={\"Furnishings and Accessories\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"Project Coordination\"                            \n                                            onChange={handleCheck(\"projectcoordination\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={coordination} \n                                            Title={\"Project Coordination\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <div className=\"fotter-back\">\n                                            <Button \n                                                variant=\"contained\"\n                                                color=\"primary\" \n                                                className = \"footer-btn-back\"\n                                                onClick = {this.back}\n                                                >\n                                                Back\n                                            </Button>\n                                        </div>\n                                        <div className=\"fotter\">\n                                            <Button \n                                                variant=\"contained\"\n                                                color=\"primary\" \n                                                className = \"footer-btn\"\n                                                onClick = {this.continue}\n                                                >\n                                                Continue\n                                            </Button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n        )\n    }\n}\n\nexport default services\n","import React, { Component } from 'react';\n\nimport Room from './room';\nimport Services from './services';\n\nimport '../elements.css';\nimport Sidebar from '../../Sidebar';\nimport Header from '../../header/header';\n\nexport class InteriorDesign extends Component {\n    \n    constructor(){\n        super();\n\n        let scrollTop = window.scrollY < 50\n\n        this.state = {\n            inStep: 1,\n            scrollTop: scrollTop,\n        };    \n    }\n\n    componentDidMount = () => {\n        window.addEventListener('scroll', this.handleScroll, true);\n    }\n    \n    handleScroll = (event) => {\n        let scrollTop = window.scrollY < 50\n\n        this.setState({\n            scrollTop: scrollTop\n        });\n    }\n\n    inNextStep = () =>  {\n        const { inStep } = this.state;\n        this.setState({\n            inStep: inStep + 1\n        })\n    }\n\n    prevStep = () =>  {\n        const { inStep } = this.state;\n        this.setState({\n            inStep: inStep - 1\n        })\n    }\n\n    nextStep = () => {\n        this.props.gotoConfirm();\n    }\n\n    //Proced to Prev step\n    inPrevStep = () => {\n        this.props.prevStep();\n    }\n   \n    renderSidebar (inStep, scrollTop) {\n        if (inStep === 1) {\n            return(\n                <Sidebar\n                stepper = {0}\n                stepperList = {['Rooms to Redesign', 'Services']}\n                scrollTop = {scrollTop}\n                ></Sidebar>\n            )\n        } else {\n            return(\n                <Sidebar\n                stepper = {1}\n                stepperList = {['Rooms to Redesign', 'Services']}\n                scrollTop = {scrollTop}\n                ></Sidebar>\n            )\n        }\n    }\n\n    renderSwitch(inStep, values, onValueChange, handleCheck) {\n        switch (inStep) {\n            case 1:\n                return(\n                    <Room \n                    nextStep = {this.inNextStep}\n                    prevStep = {this.inPrevStep}\n                    handleCheck = {handleCheck}\n                    onValueChange = {onValueChange}\n                    values = {values}\n                    uniqrooms = {this.props.uniqrooms}\n                    ></Room>\n                );\n            case 2:\n                return(\n                    <Services\n                    nextStep = {this.nextStep}\n                    prevStep = {this.prevStep}\n                    handleCheck = {handleCheck}\n                    onValueChange = {onValueChange}\n                    values = {values}\n                    uniqservices = {this.props.uniqservices}\n                    ></Services>\n                )\n            default:\n                break;\n        }\n      }\n\n    render() {\n\n        const { inStep , scrollTop } = this.state;\n        const { onValueChange , option , handleCheck } = this.props;\n        const values = { option };\n\n        return (\n            <div>\n                <Header Title=\"Renestek Cost Estimator\"></Header>\n                {this.renderSidebar(inStep, scrollTop)}\n                {this.renderSwitch(inStep, values, onValueChange , handleCheck)}\n            </div>\n          );\n        \n    }\n}\n\nexport default InteriorDesign\n","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport CustomCardRadio from '../../customCard/CustomCardRadio';\nimport Typography from '@material-ui/core/Typography';\n\nimport '../elements.css';\n\nexport class Planning extends Component {\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back  = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render() {\n        const { values, onValueChange, complete, partial} = this.props;\n\n        return (\n            <div>\n                <div className=\"main\">\n                    <div className=\"main-box\">\n                        <div className=\"container space-2 space-md-3\">\n                            <div className=\"steps\">\n                                <div className=\"main-screen\">\n                                    <br />\n                                    <Typography variant=\"h4\" className=\"title font-weight-bold Title-elements\">\n                                        What type of renovation are you planning?\n                                    </Typography>\n                                    <br />\n                                    <div className=\"allItems\">\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"completeRemodel\"                            \n                                            onChange={onValueChange(\"renovation_type\")} \n                                            checked={values.option === \"completeRemodel\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={complete} \n                                            Title={\"complete Remodel\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"partialRemodel\"                            \n                                            onChange={onValueChange(\"renovation_type\")} \n                                            checked={values.option === \"partialRemodel\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={partial} \n                                            Title={\"partial Remodel\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <div className=\"fotter-back\">\n                                            <Button \n                                                variant=\"contained\"\n                                                color=\"primary\" \n                                                className = \"footer-btn-back\"\n                                                onClick = {this.back}\n                                                >\n                                                Back\n                                            </Button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Planning\n","export default __webpack_public_path__ + \"static/media/009-house.fe7c8471.svg\";","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport CustomCardRadio from '../../customCard/CustomCardRadio';\nimport Typography from '@material-ui/core/Typography';\n\nimport exteriorSiding from '../../../assets/svg-white/009-house.svg';\n\nimport '../elements.css';\n\nexport class Shape extends Component {\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back  = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render() {\n        const { values, onValueChange} = this.props;\n\n        return (\n            <div>\n                <div className=\"main\">\n                    <div className=\"main-box\">\n                        <div className=\"container space-2 space-md-3\">\n                            <div className=\"steps\">\n                                <div className=\"main-screen\">\n                                    <br />\n                                    <Typography variant=\"h4\" className=\"title\">\n                                        What is the shape of your kitchen?\n                                    </Typography>\n                                    <br />\n                                    <div className=\"allItems\">\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"Lshape\"                            \n                                            onChange={onValueChange(\"shape\")} \n                                            checked={values.option === \"Lshape\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={exteriorSiding} \n                                            Title={\"L shape\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"uShape\"                            \n                                            onChange={onValueChange(\"shape\")} \n                                            checked={values.option === \"uShape\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={exteriorSiding} \n                                            Title={\"u shape\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"oneWall\"                            \n                                            onChange={onValueChange(\"shape\")} \n                                            checked={values.option === \"oneWall\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={exteriorSiding} \n                                            Title={\"oneWall\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"gallery\"                            \n                                            onChange={onValueChange(\"shape\")} \n                                            checked={values.option === \"gallery\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={exteriorSiding} \n                                            Title={\"gallery\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <div className=\"fotter-back\">\n                                            <Button \n                                                variant=\"contained\"\n                                                color=\"primary\" \n                                                className = \"footer-btn-back\"\n                                                onClick = {this.back}\n                                                >\n                                                Back\n                                            </Button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Shape\n","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport CustomCardCheck from '../../customCard/CustomCardCheck';\nimport Typography from '@material-ui/core/Typography';\n\nimport '../elements.css';\n\nexport class Parts extends Component {\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back  = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render() {\n        const { handleCheck, complete, partial} = this.props;\n\n        return (\n            <div>\n                <div className=\"main\">\n                    <div className=\"main-box\">\n                        <div className=\"container space-2 space-md-3\">\n                            <div className=\"steps\">\n                                <div className=\"main-screen\">\n                                    <br />\n                                    <Typography variant=\"h4\" className=\"title font-weight-bold\">\n                                    What do you want to change in your kitchen?\n                                    </Typography>\n                                    <Typography variant=\"h5\" className=\"subTitle font-weight-light\">\n                                        you may select multiple options \n                                    </Typography>\n                                    <br />\n                                    <div className=\"allItems\">\n                                        <label>\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"cabinet\"                            \n                                            onChange={handleCheck(\"cabinet\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={complete} \n                                            Title={\"cabinet\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"counter\"                            \n                                            onChange={handleCheck(\"counter\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={partial} \n                                            Title={\"counter\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"painting\"                            \n                                            onChange={handleCheck(\"painting\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={partial} \n                                            Title={\"painting\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"backsplash\"                            \n                                            onChange={handleCheck(\"backsplash\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={partial} \n                                            Title={\"backsplash\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"flooring\"                            \n                                            onChange={handleCheck(\"flooring\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={partial} \n                                            Title={\"flooring\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <div className=\"fotter-back\">\n                                            <Button \n                                                variant=\"contained\"\n                                                color=\"primary\" \n                                                className = \"footer-btn-back\"\n                                                onClick = {this.back}\n                                                >\n                                                Back\n                                            </Button>\n                                        </div>\n                                        <div className=\"fotter\">\n                                            <Button \n                                                variant=\"contained\"\n                                                color=\"primary\" \n                                                className = \"footer-btn\"\n                                                onClick = {this.continue}\n                                                >\n                                                Continue\n                                            </Button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Parts\n","import React, { Component } from 'react';\n\nimport Planning from './Planning';\nimport Shape from './Shape';\nimport Parts from './Parts';\n\nimport complete from '../../../assets/svg-white/005-kitchen.svg';\nimport partial from '../../../assets/svg-white/005-kitchen.svg';\n\nimport '../elements.css';\nimport Sidebar from '../../Sidebar';\nimport Header from '../../header/header';\n\nexport class Kitchen extends Component {\n    \n    constructor(){\n        super();\n        this.state = {\n            inStep: 1,\n        };    \n    }\n\n    inNextStep = () =>  {\n        const { inStep } = this.state;\n        this.setState({\n            inStep: inStep + 1\n        })\n    }\n\n    prevStep = () =>  {\n        const { inStep } = this.state;\n        this.setState({\n            inStep: inStep - 1\n        })\n    }\n\n    //Proced to Prev step\n    nextStep = () => {\n        this.props.nextStep();\n    }\n\n    //Proced to Prev step\n    inPrevStep = () => {\n        this.props.prevStep();\n    }\n    \n    renderSidebar (inStep) {\n        if (inStep === 1) {\n            return(\n                <Sidebar\n                stepper = {0}\n                stepperList = {['renovation type', '???','material type','kitchen size']}\n                ></Sidebar>\n            )\n        } else if (this.props.values.renovation_type === \"completeRemodel\"){\n            return(\n                <Sidebar\n                stepper = {1}\n                stepperList = {['renovation type', 'kitchen shape','material type','kitchen size']}\n                ></Sidebar>\n            )\n        } else if (this.props.values.renovation_type === \"partialRemodel\") {\n            return(\n                <Sidebar\n                stepper = {1}\n                stepperList = {['renovation type', 'change your kitchen','material type','kitchen size']}\n                ></Sidebar>    \n            )\n        }\n    }\n\n    renderSwitch(inStep, values, onValueChange, handleCheck) {\n        switch (inStep) {\n            case 1:\n                return(\n                    <Planning \n                    nextStep = {this.inNextStep}\n                    prevStep = {this.inPrevStep}\n                    onValueChange = {onValueChange}\n                    values = {values}\n                    complete = {complete}\n                    partial = {partial}\n                    ></Planning>\n                );\n            case 2:\n                if (this.props.values.renovation_type === \"completeRemodel\") {\n                    return(\n                        <Shape\n                        nextStep = {this.nextStep}\n                        prevStep = {this.prevStep}\n                        onValueChange = {onValueChange}\n                        values = {values}\n                        ></Shape>\n                    )    \n                } else {\n                    return(\n                        <Parts\n                        nextStep = {this.nextStep}\n                        prevStep = {this.prevStep}\n                        onValueChange = {onValueChange}\n                        values = {values}\n                        handleCheck = {handleCheck}\n                        complete = {complete}\n                        partial = {partial}    \n                        ></Parts>\n                    )    \n                }\n            default:\n                break;\n        }\n      }\n\n    render() {\n\n        const { inStep } = this.state;\n        const { option, onValueChange, handleCheck,  } = this.props;\n        const values = { option , handleCheck };\n\n        return (\n            <div>\n                <Header Title=\"Renestek Cost Estimator\"></Header>\n                {this.renderSidebar(inStep)}\n                {this.renderSwitch(inStep, values, onValueChange, handleCheck)}\n            </div>\n          );\n        \n    }\n}\n\nexport default Kitchen\n","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport CustomCardCheck from '../../customCard/CustomCardCheck';\nimport Typography from '@material-ui/core/Typography';\n\nimport '../elements.css';\n\nexport class PaintNeed extends Component {\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back  = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render() {\n        const { handleCheck, complete, partial} = this.props;\n\n        return (\n            <div>\n                <div className=\"main\">\n                    <div className=\"main-box\">\n                        <div className=\"container space-2 space-md-3\">\n                            <div className=\"steps\">\n                                <div className=\"main-screen\">\n                                    <br />\n                                    <Typography variant=\"h4\" className=\"title font-weight-bold\">\n                                        What do you need to paint?\n                                    </Typography>\n                                    <Typography variant=\"h5\" className=\"subTitle font-weight-light\">\n                                        you may select multiple options \n                                    </Typography>\n                                    <br />\n                                    <div className=\"allItems\">\n                                        <label>\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"walls\"                            \n                                            onChange={handleCheck(\"walls\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={complete} \n                                            Title={\"walls\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"ceiling\"                            \n                                            onChange={handleCheck(\"ceiling\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={partial} \n                                            Title={\"ceiling\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"checkbox\"\n                                            value=\"extra\"                            \n                                            onChange={handleCheck(\"extra\")} \n                                            >\n                                            </input>\n                                            <CustomCardCheck \n                                            img={partial} \n                                            Title={\"extra (Trims, doors, closets)\"}\n                                            ></CustomCardCheck>\n                                        </label>\n                                        <div className=\"fotter-back\">\n                                            <Button \n                                                variant=\"contained\"\n                                                color=\"primary\" \n                                                className = \"footer-btn-back\"\n                                                onClick = {this.back}\n                                                >\n                                                Back\n                                            </Button>\n                                        </div>\n                                        <div className=\"fotter\">\n                                            <Button \n                                                variant=\"contained\"\n                                                color=\"primary\" \n                                                className = \"footer-btn\"\n                                                onClick = {this.continue}\n                                                >\n                                                Continue\n                                            </Button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PaintNeed\n","import React, { Component } from 'react';\n\nimport PaintNeed from './paintNeed';\n\nimport complete from '../../../assets/svg-white/005-kitchen.svg';\nimport partial from '../../../assets/svg-white/005-kitchen.svg';\n\nimport '../elements.css';\nimport Sidebar from '../../Sidebar';\nimport Header from '../../header/header';\n\nexport class Painting extends Component {\n    \n    constructor(){\n        super();\n        this.state = {\n            inStep: 1,\n        };    \n    }\n\n    inNextStep = () =>  {\n        this.props.gotoSize()\n    }\n\n    prevStep = () =>  {\n        const { inStep } = this.state;\n        this.setState({\n            inStep: inStep - 1\n        })\n    }\n\n    nextStep = () => {\n        this.props.gotoConfirm();\n    }\n\n    //Proced to Prev step\n    inPrevStep = () => {\n        this.props.prevStep();\n    }\n    \n    renderSidebar (inStep) {\n        if (inStep === 1) {\n            return(\n                <Sidebar\n                stepper = {0}\n                stepperList = {['Painting', 'Painting Size']}\n                ></Sidebar>\n            )\n        }\n    }\n\n\n    renderSwitch(inStep, values, handleCheck) {\n        switch (inStep) {\n            case 1:\n                return(\n                    <PaintNeed \n                    nextStep = {this.inNextStep}\n                    prevStep = {this.inPrevStep}\n                    handleCheck = {handleCheck}\n                    values = {values}\n                    complete = {complete}\n                    partial = {partial}\n                    ></PaintNeed>\n                );\n            default:\n                break;\n        }\n      }\n\n    render() {\n\n        const { inStep } = this.state;\n        const { option, handleCheck } = this.props;\n        const values = { option };\n\n        return (\n            <div>\n                <Header Title=\"Renestek Cost Estimator\"></Header>\n                {this.renderSidebar(inStep)}\n                {this.renderSwitch(inStep, values, handleCheck)}\n            </div>\n          );\n        \n    }\n}\n\nexport default Painting\n","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport CustomCardRadio from '../../customCard/CustomCardRadio';\nimport Typography from '@material-ui/core/Typography';\n\nimport '../elements.css';\n\nexport class roofType extends Component {\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back  = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render() {\n        const { values, onValueChange, complete, partial} = this.props;\n\n        return (\n            <div>\n                <div className=\"main\">\n                    <div className=\"main-box\">\n                        <div className=\"container space-2 space-md-3\">\n                            <div className=\"steps\">\n                                <div className=\"main-screen\">\n                                    <br />\n                                    <Typography variant=\"h4\" className=\"title font-weight-bold Title-elements\">\n                                    What is the type of the roof?\n                                    </Typography>\n                                    <br />\n                                    <div className=\"allItems\">\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"shingle\"                            \n                                            onChange={onValueChange(\"roof_type\")} \n                                            checked={values.option === \"shingle\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={complete} \n                                            Title={\"shingle\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"metal\"                            \n                                            onChange={onValueChange(\"roof_type\")} \n                                            checked={values.option === \"metal\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={partial} \n                                            Title={\"metal\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"flat\"                            \n                                            onChange={onValueChange(\"roof_type\")} \n                                            checked={values.option === \"flat\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={partial} \n                                            Title={\"flat\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <div className=\"fotter-back\">\n                                            <Button \n                                                variant=\"contained\"\n                                                color=\"primary\" \n                                                className = \"footer-btn-back\"\n                                                onClick = {this.back}\n                                                >\n                                                Back\n                                            </Button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default roofType\n","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport CustomCardRadio from '../../customCard/CustomCardRadio';\nimport Typography from '@material-ui/core/Typography';\n\nimport '../elements.css';\n\nexport class Slope extends Component {\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back  = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render() {\n        const { values, onValueChange, complete, partial} = this.props;\n\n        return (\n            <div>\n                <div className=\"main\">\n                    <div className=\"main-box\">\n                        <div className=\"container space-2 space-md-3\">\n                            <div className=\"steps\">\n                                <div className=\"main-screen\">\n                                    <br />\n                                    <Typography variant=\"h4\" className=\"title font-weight-bold Title-elements\">\n                                    What is the slope of your roof?\n                                    </Typography>\n                                    <br />\n                                    <div className=\"allItems\">\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"slight\"                            \n                                            onChange={onValueChange(\"Slope\")} \n                                            checked={values.option === \"slight\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={complete} \n                                            Title={\"slight angle/pitch\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"standard\"                            \n                                            onChange={onValueChange(\"Slope\")} \n                                            checked={values.option === \"standard\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={partial} \n                                            Title={\"standard angle/pitch\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"steep\"                            \n                                            onChange={onValueChange(\"Slope\")} \n                                            checked={values.option === \"steep\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={partial} \n                                            Title={\"steep angle/pitch\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <div className=\"fotter-back\">\n                                            <Button \n                                                variant=\"contained\"\n                                                color=\"primary\" \n                                                className = \"footer-btn-back\"\n                                                onClick = {this.back}\n                                                >\n                                                Back\n                                            </Button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Slope\n","import React, { Component } from 'react';\n\nimport RoofType from './roofType';\nimport Slope from './Slope';\n\nimport complete from '../../../assets/svg-white/005-kitchen.svg';\nimport partial from '../../../assets/svg-white/005-kitchen.svg';\n\nimport '../elements.css';\nimport Sidebar from '../../Sidebar';\nimport Header from '../../header/header';\n\nexport class Roofings extends Component {\n    \n    constructor(){\n        super();\n        this.state = {\n            inStep: 1,\n        };    \n    }\n\n    inNextStep = () =>  {\n        const { inStep } = this.state;\n        this.setState({\n            inStep: inStep + 1\n        })\n    }\n\n    prevStep = () =>  {\n        const { inStep } = this.state;\n        this.setState({\n            inStep: inStep - 1\n        })\n    }\n\n    nextStep = () => {\n        this.props.gotoSize();\n    }\n\n    //Proced to Prev step\n    inPrevStep = () => {\n        this.props.prevStep();\n    }\n    \n    renderSidebar (inStep) {\n        if (inStep === 1) {\n            return(\n                <Sidebar\n                stepper = {0}\n                stepperList = {['Roof Type', '???']}\n                ></Sidebar>\n            )\n        } else if (this.props.values.roof_type === \"flat\"){\n            return(\n                <Sidebar\n                stepper = {0}\n                stepperList = {['Roof Type', 'Roof Size']}\n                ></Sidebar>    \n            )\n        } else {\n            return(\n                <Sidebar\n                stepper = {1}\n                stepperList = {['Roof Type', 'Roof Slope' ,  'Roof Size']}\n                ></Sidebar>    \n            )\n        }\n    }\n\n    renderSwitch(inStep, values, onValueChange) {\n        switch (inStep) {\n            case 1:\n                return(\n                    <RoofType \n                    nextStep = {this.inNextStep}\n                    prevStep = {this.inPrevStep}\n                    onValueChange = {onValueChange}\n                    values = {values}\n                    complete = {complete}\n                    partial = {partial}\n                    ></RoofType>\n                );\n            case 2:\n                if (this.props.values.roof_type === \"flat\") {\n                    this.nextStep()\n                } else {\n                    return (\n                        <Slope \n                        nextStep = {this.nextStep}\n                        prevStep = {this.prevStep}\n                        onValueChange = {onValueChange}\n                        values = {values}\n                        complete = {complete}\n                        partial = {partial}\n                        ></Slope>    \n                    )\n                }\n                break;\n            default:\n                break;\n        }\n      }\n\n    render() {\n\n        const { inStep } = this.state;\n        const { option , onValueChange} = this.props;\n        const values = { option };\n\n        return (\n            <div>\n                <Header Title=\"Renestek Cost Estimator\"></Header>\n                {this.renderSidebar(inStep)}\n                {this.renderSwitch(inStep, values, onValueChange)}\n            </div>\n          );\n        \n    }\n}\n\nexport default Roofings\n","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport CustomCardRadio from '../../customCard/CustomCardRadio';\nimport Typography from '@material-ui/core/Typography';\n\nimport '../elements.css';\n\nexport class MaterialType extends Component {\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back  = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render() {\n        const { values, onValueChange, complete, partial} = this.props;\n\n        return (\n            <div>\n                <div className=\"main\">\n                    <div className=\"main-box\">\n                        <div className=\"container space-2 space-md-3\">\n                            <div className=\"steps\">\n                                <div className=\"main-screen\">\n                                    <br />\n                                    <Typography variant=\"h4\" className=\"title font-weight-bold Title-elements\">\n                                    What type of materials do you want?\n                                    </Typography>\n                                    <br />\n                                    <div className=\"allItems\">\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"pvc\"                            \n                                            onChange={onValueChange(\"material\")} \n                                            checked={values.option === \"pvc\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={complete} \n                                            Title={\"pvc\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"wood\"                            \n                                            onChange={onValueChange(\"material\")} \n                                            checked={values.option === \"wood\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={partial} \n                                            Title={\"wood\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"aluminum\"                            \n                                            onChange={onValueChange(\"material\")} \n                                            checked={values.option === \"aluminum\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={partial} \n                                            Title={\"aluminum\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <div className=\"fotter-back\">\n                                            <Button \n                                                variant=\"contained\"\n                                                color=\"primary\" \n                                                className = \"footer-btn-back\"\n                                                onClick = {this.back}\n                                                >\n                                                Back\n                                            </Button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MaterialType\n","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport CustomCardRadio from '../../customCard/CustomCardRadio';\nimport Typography from '@material-ui/core/Typography';\n\nimport '../elements.css';\n\nexport class WindowSize extends Component {\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back  = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render() {\n        const { values, onValueChange, complete, partial} = this.props;\n\n        return (\n            <div>\n                <div className=\"main\">\n                    <div className=\"main-box\">\n                        <div className=\"container space-2 space-md-3\">\n                            <div className=\"steps\">\n                                <div className=\"main-screen\">\n                                    <br />\n                                    <Typography variant=\"h4\" className=\"title font-weight-bold Title-elements\">\n                                        What size are your windows?\n                                    </Typography>\n                                    <br />\n                                    <div className=\"allItems\">\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"small\"                            \n                                            onChange={onValueChange(\"size\")} \n                                            checked={values.option === \"small\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={complete} \n                                            Title={\"small\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"medium\"                            \n                                            onChange={onValueChange(\"size\")} \n                                            checked={values.option === \"medium\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={partial} \n                                            Title={\"medium\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"large\"                            \n                                            onChange={onValueChange(\"size\")} \n                                            checked={values.option === \"large\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={partial} \n                                            Title={\"large\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <div className=\"fotter-back\">\n                                            <Button \n                                                variant=\"contained\"\n                                                color=\"primary\" \n                                                className = \"footer-btn-back\"\n                                                onClick = {this.back}\n                                                >\n                                                Back\n                                            </Button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default WindowSize\n","export default __webpack_public_path__ + \"static/media/Size.7787ca73.svg\";","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nimport SizePic from '../../../assets/Size.svg';\n\nimport '../elements.css';\n\nexport class Number extends Component {\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back  = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render() {\n        const { onValueChange} = this.props;\n\n        return (\n            <div>\n                <div className=\"main\">\n                    <div className=\"main-box\">\n                        <div className=\"container space-2 space-md-3\">\n                            <div className=\"steps\">\n                                <div className=\"main-screen\">\n                                    <br />\n                                    <Typography variant=\"h4\" className=\"title\">\n                                        How many windows would you like to replace?\n                                    </Typography>\n                                    <br />\n                                    <TextField\n                                    fullWidth\n                                    id=\"outlined-number\"\n                                    label=\"Size\"\n                                    type=\"Number of windows\"\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    onChange={onValueChange(\"count\")}\n                                    variant=\"outlined\"\n                                    />\n                                    <img className=\"SizePic\" src={SizePic} alt=\"Size\" />\n                                    <div className=\"fotter-back\">\n                                        <Button \n                                            variant=\"contained\"\n                                            color=\"primary\" \n                                            className = \"footer-btn-back\"\n                                            onClick = {this.back}\n                                            >\n                                            Back\n                                        </Button>\n                                    </div>\n                                    <div className=\"fotter\">\n                                        <Button \n                                            variant=\"contained\"\n                                            color=\"primary\" \n                                            className = \"footer-btn\"\n                                            onClick = {this.continue}\n                                            >\n                                            Continue\n                                        </Button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Number\n","import React, { Component } from 'react';\n\nimport MaterialType from './materialType';\nimport WindowSize from './windowSize';\nimport Number from './Number';\n\nimport complete from '../../../assets/svg-white/005-kitchen.svg';\nimport partial from '../../../assets/svg-white/005-kitchen.svg';\n\nimport '../elements.css';\nimport Sidebar from '../../Sidebar';\nimport Header from '../../header/header';\n\nexport class Windows extends Component {\n    \n    constructor(){\n        super();\n        this.state = {\n            inStep: 1,\n        };    \n    }\n\n    inNextStep = () =>  {\n        const { inStep } = this.state;\n        this.setState({\n            inStep: inStep + 1\n        })\n    }\n\n    prevStep = () =>  {\n        const { inStep } = this.state;\n        this.setState({\n            inStep: inStep - 1\n        })\n    }\n\n    nextStep = () => {\n        this.props.gotoConfirm();\n    }\n\n    //Proced to Prev step\n    inPrevStep = () => {\n        this.props.prevStep();\n    }\n\n    \n    renderSidebar (inStep) {\n        switch (inStep) {\n            case 1:\n                return(\n                    <Sidebar\n                    stepper = {0}\n                    stepperList = {['Material Tyep', 'Windows Size','Windows Number']}\n                    ></Sidebar>\n                )\n            case 2:\n                return(\n                    <Sidebar\n                    stepper = {1}\n                    stepperList = {['Material Tyep', 'Windows Size','Windows Number']}\n                    ></Sidebar>\n                )\n            case 3:\n                return(\n                    <Sidebar\n                    stepper = {2}\n                    stepperList = {['Material Tyep', 'Windows Size','Windows Number']}\n                    ></Sidebar>\n                )\n            default:\n                break;\n        }\n    }\n\n    renderSwitch(inStep, values, onValueChange) {\n        switch (inStep) {\n            case 1:\n                return(\n                    <MaterialType \n                    nextStep = {this.inNextStep}\n                    prevStep = {this.inPrevStep}\n                    onValueChange = {onValueChange}\n                    values = {values}\n                    complete = {complete}\n                    partial = {partial}\n                    ></MaterialType>\n                );\n            case 2:\n                return(\n                    <WindowSize\n                    nextStep = {this.inNextStep}\n                    prevStep = {this.prevStep}\n                    onValueChange = {onValueChange}\n                    values = {values}\n                    complete = {complete}\n                    partial = {partial}\n                    ></WindowSize>\n                )\n            case 3:\n                return(\n                    <Number\n                    nextStep = {this.nextStep}\n                    prevStep = {this.prevStep}\n                    onValueChange = {onValueChange}\n                    values = {values}\n                    ></Number>\n                )\n            default:\n                break;\n        }\n      }\n\n    render() {\n\n        const { inStep } = this.state;\n        const { option , onValueChange} = this.props;\n        const values = { option };\n\n        return (\n            <div>\n                <Header Title=\"Renestek Cost Estimator\"></Header>\n                {this.renderSidebar(inStep)}\n                {this.renderSwitch(inStep, values, onValueChange)}\n            </div>\n          );\n        \n    }\n}\n\nexport default Windows\n","export default __webpack_public_path__ + \"static/media/008-windows.2d8921b5.svg\";","export default __webpack_public_path__ + \"static/media/009-roof.fe56864a.svg\";","export default __webpack_public_path__ + \"static/media/007-draws.985e82c5.svg\";","export default __webpack_public_path__ + \"static/media/004-basement.0d44be02.svg\";","export default __webpack_public_path__ + \"static/media/005-kitchen.007e230b.svg\";","export default __webpack_public_path__ + \"static/media/006-bathtub.25278830.svg\";","export default __webpack_public_path__ + \"static/media/003-paint-roller.c09e82be.svg\";","export default __webpack_public_path__ + \"static/media/interior.b7a74c14.svg\";","export default __webpack_public_path__ + \"static/media/exterior.4e16820b.svg\";","import React, { Component } from 'react'\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n\nimport './Select.css';\nimport { Fragment } from 'react';\nimport { render } from '@testing-library/react';\nimport { Typography } from '@material-ui/core';\n\nimport windows from '../assets/conf item/008-windows.svg';\nimport roofing from '../assets/conf item/009-roof.svg';\nimport flooring from '../assets/conf item/007-draws.svg';\nimport basement from '../assets/conf item/004-basement.svg';\nimport kitchen from '../assets/conf item/005-kitchen.svg';\nimport bathroom from '../assets/conf item/006-bathtub.svg';\nimport painting from '../assets/conf item/003-paint-roller.svg';\nimport interior from '../assets/interior.svg';\nimport exterior from '../assets/svg-white/exterior.svg';\n\n\nexport class NativeSelects extends Component {\n\n  constructor(props){\n    super(props);\n    this.state ={\n      name: '',\n      selected: this.props.project\n    } \n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  renderList = (selected) => {\n      let content = [];\n      for (let i = 0; i < selected.length; i++) {\n        const item = selected[i];\n        content.push(<Typography variant=\"p\" className=\"item-question\">{item}, &nbsp;</Typography>);\n        if (i === selected.length - 1) {\n          content.pop(<Typography variant=\"p\" className=\"item-question\">{item} &nbsp;</Typography>);\n          content.push(<Typography variant=\"p\" className=\"item-question\">{item} &nbsp;</Typography>);\n        }\n      }\n      return content;    \n  }\n\n  itemList = (question, selected) => {\n      return(\n          <div className=\"row g-0 bg-white items\">\n              {/* <div className=\"col-2 col-md-2\">\n                  {this.Questionicons(this.props.data.category)}\n              </div> */}\n              <div className=\"col-sm-10 col-md-10 text-left \">\n                  <Typography variant=\"h6\" className=\"item-question\" >\n                      {question}\n                  </Typography>\n                  <div className=\"row ml-0\">\n                      {this.renderList(selected)}\n                  </div>\n              </div>\n          </div>\n      )\n  }\n\n  item = (question, selected) => {\n      return(\n          <div className=\"row g-0 bg-white items\">\n              {/* <div className=\"col-2 col-md-2\">\n                  {this.Questionicons(this.props.data.category)}\n              </div> */}\n              <div className=\"col-sm-10 col-md-10 text-left \">\n                  <Typography variant=\"h6\" className=\"item-question\" >\n                      {question}\n                  </Typography>\n                  <Typography variant=\"p\" className=\"item-answer\" >\n                      {selected}\n                  </Typography>\n              </div>\n          </div>\n      )\n  }\n\n  handleChange = (event) => {\n    this.setState({\n        name: event.target.name,\n        selected: event.target.value\n    });\n  }\n\n  icons = (category) => {\n      switch (category) {\n          case 'kitchen':\n              return(\n                  <img className=\"icon\" src={kitchen} alt=\"mast dg\" />\n                  );\n          case 'basement':\n              return(\n                  <img className=\"icon\" src={basement} alt=\"mast dg\" />\n                  );\n          case 'bathroom':\n              return(\n                  <img className=\"icon\" src={bathroom} alt=\"mast dg\" />\n                  );\n          case 'exterior':\n              return(\n                  <img className=\"icon\" src={exterior} alt=\"mast dg\" />\n                  );\n          case 'flooring':\n              return(\n                  <img className=\"icon\" src={flooring} alt=\"mast dg\" />\n                  );\n          case 'interior':\n              return(\n                  <img className=\"icon\" src={interior} alt=\"mast dg\" />\n                  );\n          case 'painting':\n              return(\n                  <img className=\"icon\" src={painting} alt=\"mast dg\" />\n                  );\n          case 'roofing':\n              return(\n                  <img className=\"icon\" src={roofing} alt=\"mast dg\" />\n                  );\n          case 'windows':\n              return(\n                  <img className=\"icon\" src={windows} alt=\"mast dg\" />\n                  )\n          default:\n              break;            \n      }\n  }\n\n  renderTitle = (category) => {\n      return(\n          <div className=\"items-head\">\n              {this.icons(category)}\n              <Typography variant=\"h5\" className=\"head-title\" >\n                  {category}\n              </Typography>\n          </div>\n      )\n  }\n\n  renderItems = (data) => {\n      switch (data.category) {\n          case 'kitchen':\n              if (data.renovation_type === \"completeRemodel\") {\n                  return(\n                      <div>\n                          {this.item(\"renovation type\",data.renovation_type)}\n                          {this.item(\"shape\",data.shape)}\n                          {this.item(\"materials\",data.materials)}\n                          {this.item(\"size\",data.size)}\n                      </div>\n                  );    \n              }\n              return(\n                  <div>\n                      {this.item(\"renovation type\",data.renovation_type)}\n                      {this.itemList(\"Parts\",data.uniqOptions)}\n                      {this.item(\"materials\",data.materials)}\n                      {this.item(\"size\",data.size)}\n                  </div>\n              );\n          case 'basement':\n              return(\n                  <div>\n                      {this.itemList(\"options\",data.uniqOptions)}\n                      {this.item(\"materials\",data.materials)}\n                      {this.item(\"size\",data.size)}\n                  </div>\n              );\n          case 'bathroom':\n              if (data.renovation_type === \"completeRemodel\") {\n                  return(\n                      <div>\n                          {this.item(\"renovation type\",data.renovation_type)}\n                          {this.item(\"design\",data.design)}\n                          {this.item(\"materials\",data.materials)}\n                          {this.item(\"size\",data.size)}\n                      </div>\n                  );    \n              }\n              return(\n                  <div>\n                      {this.item(\"renovation type\",data.renovation_type)}\n                      {this.itemList(\"parts\",data.uniqOptions)}\n                      {this.item(\"materials\",data.materials)}\n                      {this.item(\"size\",data.size)}\n                  </div>\n              );\n          case 'exterior':\n              return(\n                  <div>\n                      {/* {this.item(\"What do you want to do in your basement?\",data.category)} */}\n                      {this.item(\"Type of Siding\", data.siding)}\n                      {this.item(\"Surface Area\", data.size)}\n                  </div>\n              );\n          case 'flooring':\n              return(\n                  <div>\n                      {this.item(\"type\",data.type)}\n                      {this.item(\"materials\",data.materials)}\n                      {this.item(\"size\",data.size)}\n                  </div>\n              );\n          case 'interior':\n              return(\n                  <div>\n                      {this.itemList(\"Rooms\",data.rooms)}\n                      {this.itemList(\"Services\", data.services)}\n                  </div>\n              );\n          case 'painting':\n              return(\n                  <div>\n                      {this.item(\"Painting \", data.category)}\n                      {this.itemList(\"Options\" , data.uniqOptions)}\n                      {this.item(\"Size : \", data.size)}\n                  </div>\n              );\n          case 'roofing':\n              if (data.roof_type === \"flat\" ) {\n                  return(\n                      <div>\n                          { this.item(\"roofing\",data.category)}\n                          { this.item(\"roof type\",data.roof_type)}\n                          { this.item(\"size\",data.size)}\n                      </div>\n                   );\n              }\n              return(\n                  <div>\n                      { this.item(\"roofing\",data.category)}\n                      { this.item(\"roof type\",data.roof_type)}\n                      { this.item(\"slope\",data.Slope)}\n                      { this.item(\"size\",data.size)}\n                  </div>\n               );\n          case 'windows':\n              return(\n                  <div>\n                      {this.item(\"windows\",data.category)}\n                      {this.item(\"material\",data.material)}\n                      {this.item(\"size\",data.size)}\n                      {this.item(\"count\",data.count)}\n                  </div>\n              );\n          default:\n              break;\n      }\n  }\n\n  Questionicons = (category) => {\n    switch (category) {\n        case 'kitchen':\n            return(\n                <img className=\"icon\" src={kitchen} alt=\"mast dg\" />\n                );\n        case 'basement':\n            return(\n                <img className=\"icon\" src={basement} alt=\"mast dg\" />\n                );\n        case 'bathroom':\n            return(\n                <img className=\"icon\" src={bathroom} alt=\"mast dg\" />\n                );\n        case 'exterior':\n            return(\n                <img className=\"icon\" src={exterior} alt=\"mast dg\" />\n                );\n        case 'flooring':\n            return(\n                <img className=\"icon\" src={flooring} alt=\"mast dg\" />\n                );\n        case 'interiorDesinge':\n            return(\n                <img className=\"icon\" src={interior} alt=\"mast dg\" />\n                );\n        case 'painting':\n            return(\n                <img className=\"icon\" src={painting} alt=\"mast dg\" />\n                );\n        case 'roofing':\n            return(\n                <img className=\"icon\" src={roofing} alt=\"mast dg\" />\n                );\n        case 'windows':\n            return(\n                <img className=\"icon\" src={windows} alt=\"mast dg\" />\n                )\n        default:\n            break;            \n    }\n  }\n\n  componentDidMount () {\n  }\n\n  componentDidUpdate(){\n  }\n\n  createList = () => {\n    return(\n        <div class=\"conf-item\">\n            <div className=\"revType items\">\n                {this.renderTitle(this.props.datas[this.state.selected].category)}\n            </div>\n            {this.renderItems(this.props.datas[this.state.selected])}\n        </div>\n    )\n  }\n\n  render() {\n    console.log(this.props.datas)\n    return (\n      <Fragment>\n        <FormControl variant=\"outlined\">\n          <InputLabel htmlFor=\"project-selector\">Project</InputLabel>\n            <Select\n              native\n              value={this.state.selected}\n              onChange={this.handleChange}\n              label='project'\n              inputProps={{\n                name: 'project',\n                id: 'project-selector',\n              }}\n            >\n              {this.props.data.items}\n            </Select>\n            {this.props.datas.length !== 0 ? this.createList() : <h1>Loading</h1>}\n        </FormControl>\n      </Fragment>\n    );\n  }\n}\n\nexport default NativeSelects;","export default __webpack_public_path__ + \"static/media/005-architect.2cbbf54b.svg\";","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport Header from './header/header';\nimport Select from './Select'\n\nimport './elements/elements.css';\nimport { Typography } from '@material-ui/core';\n\nimport './Confirm.css';\n\nimport img from '../assets/005-architect.svg';\n\nimport windows from '../assets/conf item/008-windows.svg';\nimport roofing from '../assets/conf item/009-roof.svg';\nimport flooring from '../assets/conf item/007-draws.svg';\nimport basement from '../assets/conf item/004-basement.svg';\nimport kitchen from '../assets/conf item/005-kitchen.svg';\nimport bathroom from '../assets/conf item/006-bathtub.svg';\nimport painting from '../assets/conf item/003-paint-roller.svg';\nimport interiorDesinge from '../assets/conf item/002-interior-design.svg';\nimport exteriorSiding from '../assets/svg-white/exterior.svg';\n\nimport axios from 'axios';\n\nexport class Confirm extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            estimated: null,\n        }\n    }\n\n    continue = e => {\n        e.preventDefault();\n        console.log(this.props);\n    }\n\n    back  = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    gotoStep2 = (e) => {\n        e.preventDefault();\n        this.props.gotoStep2();\n    }\n\n    renderBackBtn(){\n        switch (this.props.data.category) {\n            case 'kitchen':\n                return(\n                    <div className=\"fotter-back\">\n                        <Button \n                            variant=\"contained\"\n                            color=\"primary\" \n                            className = \"footer-btn-back\"\n                            onClick = {this.back}\n                            >\n                            Back\n                        </Button>\n                    </div>\n                )\n            case 'exterior':\n                return(\n                    <div className=\"fotter-back\">\n                        <Button \n                            variant=\"contained\"\n                            color=\"primary\" \n                            className = \"footer-btn-back\"\n                            onClick = {this.back}\n                            >\n                            Back\n                        </Button>\n                    </div>\n                )   \n            case 'painting':\n                return(\n                    <div className=\"fotter-back\">\n                        <Button \n                            variant=\"contained\"\n                            color=\"primary\" \n                            className = \"footer-btn-back\"\n                            onClick = {this.back}\n                            >\n                            Back\n                        </Button>\n                    </div>\n                )    \n            case 'basement':\n                return(\n                    <div className=\"fotter-back\">\n                        <Button \n                            variant=\"contained\"\n                            color=\"primary\" \n                            className = \"footer-btn-back\"\n                            onClick = {this.back}\n                            >\n                            Back\n                        </Button>\n                    </div>\n                )\n            case 'bathroom':\n                return(\n                    <div className=\"fotter-back\">\n                        <Button \n                            variant=\"contained\"\n                            color=\"primary\" \n                            className = \"footer-btn-back\"\n                            onClick = {this.back}\n                            >\n                            Back\n                        </Button>\n                    </div>\n                )  \n            case 'flooring':\n                return(\n                    <div className=\"fotter-back\">\n                        <Button \n                            variant=\"contained\"\n                            color=\"primary\" \n                            className = \"footer-btn-back\"\n                            onClick = {this.back}\n                            >\n                            Back\n                        </Button>\n                    </div>\n                )\n            case 'roofing':\n                return(\n                    <div className=\"fotter-back\">\n                        <Button \n                            variant=\"contained\"\n                            color=\"primary\" \n                            className = \"footer-btn-back\"\n                            onClick = {this.back}\n                            >\n                            Back\n                        </Button>\n                    </div>\n                )\n            case 'interior':\n                return(\n                    <div className=\"fotter-back\">\n                        <Button \n                            variant=\"contained\"\n                            color=\"primary\" \n                            className = \"footer-btn-back\"\n                            onClick = {this.gotoStep2}\n                            >\n                            Back\n                        </Button>\n                    </div>\n                )   \n            case 'windows':\n                return(\n                    <div className=\"fotter-back\">\n                        <Button \n                            variant=\"contained\"\n                            color=\"primary\" \n                            className = \"footer-btn-back\"\n                            onClick = {this.gotoStep2}\n                            >\n                            Back\n                        </Button>\n                    </div>\n                )   \n            default:\n                break;\n        }\n    }\n\n    extract_data = (data) => {\n\n        console.log(data)\n\n        switch (data.category) {\n            case 'kitchen':\n                if (data.renovation_type === \"completeRemodel\") {\n                        return {\n                            \"category\": data.category,\n                            \"renovation type\": data.renovation_type,\n                            \"shape\": data.shape,\n                            \"materials\": data.materials,\n                            \"size\": data.size                        \n                        }\n                }\n\n                return {\n                    \"category\": data.category,\n                    \"renovation type\": data.renovation_type,\n                    \"parts\": data.parts,\n                    \"materials\": data.materials,\n                    \"size\": data.size                        \n                }\n\n            case 'basement':\n                return {\n                    \"category\": data.category,\n                    \"options\": data.uniqOptions,\n                    \"materials\": data.materials,\n                    \"size\": data.size                        \n                }\n\n            case 'bathroom':\n                if (data.renovation_type === \"completeRemodel\") {\n                    return {\n                        \"category\": data.category,\n                        \"renovation type\": data.renovation_type,\n                        \"design\": data.design,\n                        \"materials\": data.materials,\n                        \"size\": data.size                        \n                    }\n                }\n\n                return {\n                    \"category\": data.category,\n                    \"renovation type\": data.renovation_type,\n                    \"parts\": data.uniqOptions,\n                    \"materials\": data.materials,\n                    \"size\": data.size                        \n                }\n\n            case 'exterior':\n                return {\n                    \"category\": data.category,\n                    \"siding\": data.siding,\n                    \"size\": data.size                        \n                }\n\n            case 'flooring':\n                return {\n                    \"category\": data.category,\n                    \"type\": data.type,\n                    \"materials\": data.materials,\n                    \"size\": data.size                        \n                }\n\n            case 'interior':\n                    return {\n                        \"category\": data.category,\n                        \"rooms\": data.rooms,\n                        \"services\": data.services,\n                    }\n                    \n            case 'painting':\n                return {\n                    \"category\": data.category,\n                    \"options\": data.uniqOptions,\n                    \"size\": data.size                        \n                }\n\n            case 'roofing':\n                if (data.roof_type === \"flat\" ) {\n                    return {\n                        \"category\": data.category,\n                        \"roof type\": data.roof_type,\n                        \"slope\": \"Flat\",\n                        \"size\": data.size                        \n                    }\n                }\n\n                return {\n                    \"category\": data.category,\n                    \"roof type\": data.roof_type,\n                    \"Slope\": data.slope,\n                    \"size\": data.size                        \n                }\n\n            case 'windows':\n                return {\n                    \"category\": data.category,\n                    \"material\": data.materials,\n                    \"size\": data.size,                     \n                    \"count\": data.count                    \n                }\n\n            default:\n                break;            \n        }\n    }\n\n    reset = () => {\n        this.props.reset();\n    }\n\n    add = () => {\n        this.props.add();\n    }\n\n    estimate = () => {\n        \n        var request_data = []\n\n        for (var i = 0; i < this.props.datas.length; i++) {\n            request_data.push(this.extract_data(this.props.datas[i]))\n        }\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(request_data)\n        };\n        fetch('http://127.0.0.1:8001/estimate/', requestOptions)\n            .then(response => response.json())\n            .then(data => this.setState({\n                estimated: data.total_cost\n            }));\n    }\n\n    render() {\n\n        this.props.datas[this.props.project] = this.props.data;\n\n        for (var i=0; i<this.props.datas.length; i++) {\n            this.props.data.items[i] = <option value={i}> {this.props.datas[i].category} </option>\n        }\n\n        return (\n            <div>\n                <Header Title=\"Renestek Price Prediction\"></Header>\n                <div className=\"invoice\">\n                    <div className=\"headLine items\">\n                        <img className=\"icon\" src={img} alt=\"mast dg\" />\n                        <Typography variant=\"h6\"className=\"head-title\" >\n                        Your Renovation Projects\n                        </Typography>\n                    </div>\n                    <Select \n                        data={this.props.data}\n                        datas={this.props.datas}\n                        project={this.props.project}\n                    ></Select>\n                    <div className=\"Estimate items\">\n                        <Typography variant=\"h5\">\n                            Prediction\n                        </Typography>\n                        <div class=\"price-container\">\n                            {/* <span>${this.state.estimated}</span> + 5% */}\n                            <span>${this.state.estimated}</span> &#177; 5%\n                        </div>\n                    </div>\n                    <div className=\"footer-confirm\">\n                        <div className=\"footer-conf\">\n                            <Button \n                                variant=\"contained\"\n                                color=\"primary\" \n                                className = \"footer-btns\"\n                                onClick = {this.add}\n                                >\n                                Add\n                            </Button>\n                        </div>\n                        <div className=\"footer-conf\">\n                            <Button \n                                variant=\"contained\"\n                                color=\"primary\" \n                                className = \"footer-btns\"\n                                onClick = {this.estimate}\n                                >\n                                Predict\n                            </Button>\n                        </div>\n                        <div className=\"footer-conf\">\n                            <Button \n                                variant=\"contained\"\n                                color=\"primary\" \n                                className = \"footer-btns\"\n                                onClick = {this.reset}\n                                >\n                                Reset\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"footer\">\n                    {this.renderBackBtn()}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Confirm\n","export default __webpack_public_path__ + \"static/media/002-interior-design.448de909.svg\";","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Header from './header/header';\n\nimport SizePic from '../assets/Size.svg';\n\nimport './elements/elements.css';\nimport Sidebar from './Sidebar';\n\nexport class Size extends Component {\n\n    constructor(){\n        super();\n\n        let scrollTop = window.scrollY < 50\n\n        this.state = {\n            scrollTop: scrollTop,\n        };    \n    }\n\n    componentDidMount = () => {\n        window.addEventListener('scroll', this.handleScroll, true);\n    }\n    \n    handleScroll = (event) => {\n        let scrollTop = window.scrollY < 50\n\n        this.setState({\n            scrollTop: scrollTop\n        });\n    }\n    \n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back  = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    gotoStep2 = (e) => {\n        e.preventDefault();\n        this.props.gotoStep2();\n    }\n\n    renderSidebar(scrollTop) {\n       switch (this.props.values.category) {\n           case 'kitchen':\n               if (this.props.values.renovation_type === \"completeRemodel\") {\n                    return(\n                        <Sidebar\n                        stepper = {3}\n                        stepperList = {['renovation type', 'kitchen shape','material type','kitchen size']}\n                        scrollTop = {scrollTop}\n                        ></Sidebar>\n                    )\n                } else {\n                    return(\n                        <Sidebar\n                        stepper = {3}\n                        stepperList = {['renovation type', 'change your kitchen','material type','kitchen size']}\n                        scrollTop = {scrollTop}\n                        ></Sidebar>\n                    )       \n                }\n           case 'exterior':\n                return(\n                    <Sidebar\n                    stepper = {1}\n                    stepperList = {['Type of Siding ', 'Surface Area']}\n                    scrollTop = {scrollTop}\n                    ></Sidebar>\n                )\n            case 'painting':\n                return(\n                    <Sidebar\n                    stepper = {1}\n                    stepperList = {['Painting', 'Painting Size']}\n                    scrollTop = {scrollTop}\n                    ></Sidebar>\n                )\n            case 'basement':\n                return(\n                    <Sidebar\n                    stepper = {2}\n                    stepperList = {['Basement Work', 'material type', 'Basement size']}\n                    scrollTop = {scrollTop}\n                    ></Sidebar>\n                )   \n            case 'bathroom':\n                return(\n                    <Sidebar\n                    stepper = {3}\n                    stepperList = {['renovation planning', 'change','material type','bathroom size']}\n                    scrollTop = {scrollTop}\n                    ></Sidebar>\n                )\n            case 'flooring':\n                return(\n                    <Sidebar\n                    stepper = {2}\n                    stepperList = {['Floor Type','Material Type','Floor Size']}\n                    scrollTop = {scrollTop}\n                    ></Sidebar>\n                ) \n            case 'roofing':\n                if (this.props.values.roof_type === \"flat\"){\n                    return(\n                        <Sidebar\n                        stepper = {1}\n                        stepperList = {['Roof Type', 'Roof Size']}\n                        scrollTop = {scrollTop}\n                        ></Sidebar>\n                    ) \n                } else {\n                    return(\n                        <Sidebar\n                        stepper = {2}\n                        stepperList = {['Roof Type', 'Roof Slope' ,  'Roof Size']}\n                        scrollTop = {scrollTop}\n                        ></Sidebar>\n                    ) \n                }                                       \n            default:\n               break;\n       }\n    }\n\n    renderBackBtn(){\n        switch (this.props.values.category) {\n            case 'kitchen':\n                return(\n                    <div className=\"fotter-back\">\n                        <Button \n                            variant=\"contained\"\n                            color=\"primary\" \n                            className = \"footer-btn-back\"\n                            onClick = {this.back}\n                            >\n                            Back\n                        </Button>\n                    </div>\n                )\n            case 'exterior':\n                return(\n                    <div className=\"fotter-back\">\n                        <Button \n                            variant=\"contained\"\n                            color=\"primary\" \n                            className = \"footer-btn-back\"\n                            onClick = {this.gotoStep2}\n                            >\n                            Back\n                        </Button>\n                    </div>\n                )   \n            case 'painting':\n                return(\n                    <div className=\"fotter-back\">\n                        <Button \n                            variant=\"contained\"\n                            color=\"primary\" \n                            className = \"footer-btn-back\"\n                            onClick = {this.gotoStep2}\n                            >\n                            Back\n                        </Button>\n                    </div>\n                )    \n            case 'basement':\n                return(\n                    <div className=\"fotter-back\">\n                        <Button \n                            variant=\"contained\"\n                            color=\"primary\" \n                            className = \"footer-btn-back\"\n                            onClick = {this.back}\n                            >\n                            Back\n                        </Button>\n                    </div>\n                )\n            case 'bathroom':\n                return(\n                    <div className=\"fotter-back\">\n                        <Button \n                            variant=\"contained\"\n                            color=\"primary\" \n                            className = \"footer-btn-back\"\n                            onClick = {this.back}\n                            >\n                            Back\n                        </Button>\n                    </div>\n                )  \n            case 'flooring':\n                return(\n                    <div className=\"fotter-back\">\n                        <Button \n                            variant=\"contained\"\n                            color=\"primary\" \n                            className = \"footer-btn-back\"\n                            onClick = {this.back}\n                            >\n                            Back\n                        </Button>\n                    </div>\n                )\n            case 'roofing':\n                return(\n                    <div className=\"fotter-back\">\n                        <Button \n                            variant=\"contained\"\n                            color=\"primary\" \n                            className = \"footer-btn-back\"\n                            onClick = {this.gotoStep2}\n                            >\n                            Back\n                        </Button>\n                    </div>\n                )\n            default:\n                break;\n        }\n    }\n\n    renderTitle(){\n        switch (this.props.values.category) {\n            case 'kitchen':\n                return(\n                    <Typography variant=\"h4\" className=\"title\">\n                        What is the size of your Kitchen?\n                    </Typography>\n                )    \n            case 'exterior':\n                 return(\n                    <Typography variant=\"h4\" className=\"title\">\n                        What is the surface area to replace?\n                    </Typography>\n                 )\n             case 'painting':\n                 return(\n                    <Typography variant=\"h4\" className=\"title\">\n                        What is the size of the room to be painted?\n                    </Typography>\n                 )\n             case 'basement':\n                 return(\n                    <Typography variant=\"h4\" className=\"title\">\n                        What is the size of your basement?\n                    </Typography>\n                 )   \n             case 'bathroom':\n                 return(\n                    <Typography variant=\"h4\" className=\"title\">\n                        What is the size of your bathroom?\n                    </Typography>\n                 )\n             case 'flooring':\n                 return(\n                    <Typography variant=\"h4\" className=\"title\">\n                        What is the total floor size?\n                    </Typography>\n                 ) \n             case 'roofing':\n                 return(\n                    <Typography variant=\"h4\" className=\"title\">\n                        What is the size of your roof?\n                    </Typography>\n                 )                                             \n             default:\n                break;\n        } \n    }\n\n    render() {\n\n        const { onValueChange, size} = this.props;\n        const { scrollTop } = this.state;\n\n        return (\n            <div>\n                <Header Title=\"Renestek Price Prediction\"></Header>\n                {this.renderSidebar(scrollTop)}\n                <div className=\"main\">\n                    <div className=\"main-box\">\n                        <div className=\"container space-2 space-md-3\">\n                            <div className=\"steps\">\n                                <div className=\"main-screen\">\n                                    <br />\n                                    {this.renderTitle()}\n                                    <br />\n                                    <TextField\n                                    fullWidth\n                                    id=\"outlined-number\"\n                                    label=\"Size (m&#178;)\"\n                                    type=\"number\"\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    variant=\"outlined\"\n                                    onChange={onValueChange(\"size\")}\n                                    />\n                                    <img className=\"SizePic\" src={SizePic} alt=\"Size\" />\n                                    <div className=\"fotter\">\n                                        <Button \n                                            variant=\"contained\"\n                                            color=\"primary\" \n                                            className = \"footer-btn\"\n                                            onClick = {this.continue}\n                                            disabled={!size}\n                                            >\n                                            Continue\n                                        </Button>\n                                    </div>\n                                    {this.renderBackBtn()}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Size\n","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport CustomCardRadio from './customCard/CustomCardRadio';\nimport Typography from '@material-ui/core/Typography';\n\nimport exteriorSiding from '../assets/svg-white/009-house.svg';\n\nimport './elements/elements.css';\nimport Sidebar from './Sidebar';\n\nexport class Material extends Component {\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back  = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    renderSidebar() {\n        switch (this.props.values.category) {\n            case 'kitchen':\n                if (this.props.values.renovation_type === \"completeRemodel\"){\n                    return(\n                        <Sidebar\n                        stepper = {2}\n                        stepperList = {['renovation type', 'kitchen shape','material type','kitchen size']}\n                        ></Sidebar>\n                    )\n                } else if (this.props.values.renovation_type === \"partialRemodel\") {\n                    return(\n                        <Sidebar\n                        stepper = {2}\n                        stepperList = {['renovation type', 'change your kitchen','material type','kitchen size']}\n                        ></Sidebar>    \n                    )\n                }else {\n                    break\n                }\n            case 'basement':\n                return(\n                     <Sidebar\n                     stepper = {1}\n                     stepperList = {['Basement Work', 'material type', 'Basement size']}\n                     ></Sidebar>\n                 )\n            case 'bathroom':\n                if (this.props.values.renovation_type === \"partialRemodel\") {\n                    return(\n                        <Sidebar\n                        stepper = {2}\n                        stepperList = {['renovation planning', 'change','material type','bathroom size']}\n                        ></Sidebar>\n                    )     \n                } else {\n                    return(\n                        <Sidebar\n                        stepper = {2}\n                        stepperList = {['renovation planning', 'Design','material type','bathroom size']}\n                        ></Sidebar>\n                    )     \n                }\n            case 'flooring':\n                return(\n                    <Sidebar\n                    stepper = {1}\n                    stepperList = {['Floor Type','Material Type','Floor Size']}\n                    ></Sidebar>\n                )                     \n            default:\n                break;\n        }\n     }\n\n    render() {\n        const { values, onValueChange} = this.props;\n\n        return (\n            <div>\n                {this.renderSidebar()}\n                <div className=\"main\">\n                    <div className=\"main-box\">\n                        <div className=\"container space-2 space-md-3\">\n                            <div className=\"steps\">\n                                <div className=\"main-screen\">\n                                    <br />\n                                    <Typography variant=\"h4\" className=\"title\">\n                                        What type of materials do you want?\n                                    </Typography>\n                                    <br />\n                                    <div className=\"allItems\">\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"economic\"                            \n                                            onChange={onValueChange(\"materials\")} \n                                            checked={values.option === \"Economic\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={exteriorSiding} \n                                            Title={\"Economic\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"standard\"                            \n                                            onChange={onValueChange(\"materials\")} \n                                            checked={values.option === \"standard\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={exteriorSiding} \n                                            Title={\"Standard\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <label>\n                                            <input\n                                            type=\"radio\"\n                                            value=\"highEnd\"                            \n                                            onChange={onValueChange(\"materials\")} \n                                            checked={values.option === \"highEnd\"}\n                                            onClick={this.continue}\n                                            >\n                                            </input>\n                                            <CustomCardRadio \n                                            img={exteriorSiding} \n                                            Title={\"High End\"}\n                                            ></CustomCardRadio>\n                                        </label>\n                                        <div className=\"fotter-back\">\n                                            <Button \n                                                variant=\"contained\"\n                                                color=\"primary\" \n                                                className = \"footer-btn-back\"\n                                                onClick = {this.back}\n                                                >\n                                                Back\n                                            </Button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Material\n","export default __webpack_public_path__ + \"static/media/windows.bf95349a.svg\";","export default __webpack_public_path__ + \"static/media/roofing.cbd98d05.svg\";","export default __webpack_public_path__ + \"static/media/flooring.54853728.svg\";","export default __webpack_public_path__ + \"static/media/painting.5995b9db.svg\";","export default __webpack_public_path__ + \"static/media/exterior.4e16820b.svg\";","import React, { Component } from 'react'\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport Header from './header/header';\nimport CustomCardRadio from './customCard/CustomCardRadio';\n\n\nimport windows from '../assets/windows.svg';\nimport roofing from '../assets/roofing.svg';\nimport flooring from '../assets/flooring.svg';\nimport basement from '../assets/basement.svg';\nimport kitchen from '../assets/kitchen.svg';\nimport bathroom from '../assets/bathroom.svg';\nimport painting from '../assets/painting.svg';\nimport interior from '../assets/interior.svg';\nimport exterior from '../assets/exterior.svg';\n\nimport './SelectedForm.css';\n\nexport class SelectedForm extends Component {\n\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    render() {\n        const { values, onValueChange,} = this.props;\n\n        return (\n            <MuiThemeProvider>\n                <React.Fragment>\n                    <Header Title=\"Renestek Price Prediction\"></Header>\n                    <div className=\"main\">\n                        <div className=\"main-box\">\n                            <div className=\"container space-2 space-md-3\">\n                                <div className=\"steps\">\n                                    <div className=\"main-screen\">\n                                        <br />\n                                        <Typography variant=\"h4\" className=\"title font-weight-bold\">Your renovation project starts here</Typography>\n                                        <Typography variant=\"h5\" className=\"subTitle font-weight-light\">choose a category </Typography>\n                                        <div className=\"allItems\">\n                                            <label>\n                                                <input\n                                                type=\"radio\"\n                                                value=\"exterior\"                            \n                                                onChange={onValueChange(\"category\")} \n                                                checked={values.category === \"exterior\"}\n                                                onClick={this.continue}\n                                                >\n                                                </input>\n                                                <CustomCardRadio \n                                                img={exterior} \n                                                Title={\"Exterior Design\"}\n                                                ></CustomCardRadio>\n                                            </label>\n                                            <label>\n                                                <input\n                                                type=\"radio\"\n                                                value=\"interior\"                            \n                                                onChange={onValueChange(\"category\")} \n                                                checked={values.category === \"interior\"}\n                                                onClick={this.continue}\n                                                >\n                                                </input>\n                                                <CustomCardRadio \n                                                img={interior} \n                                                Title={\"Interior Design\"}\n                                                ></CustomCardRadio>\n                                            </label>\n                                            <label>\n                                                <input\n                                                type=\"radio\"\n                                                value=\"painting\"                            \n                                                onChange={onValueChange(\"category\")} \n                                                checked={values.category === \"painting\"}\n                                                onClick={this.continue}\n                                                >\n                                                </input>\n                                                <CustomCardRadio \n                                                img={painting} \n                                                Title={\"Painting\"}\n                                                ></CustomCardRadio>\n                                            </label>\n                                            <label>\n                                                <input\n                                                type=\"radio\"\n                                                value=\"basement\"                            \n                                                onChange={onValueChange(\"category\")} \n                                                checked={values.category === \"basement\"}\n                                                onClick={this.continue}\n                                                >\n                                                </input>\n                                                <CustomCardRadio \n                                                img={basement} \n                                                Title={\"Basement\"}\n                                                ></CustomCardRadio>\n                                            </label>\n                                            <label>\n                                                <input\n                                                type=\"radio\"\n                                                value=\"kitchen\"                            \n                                                onChange={onValueChange(\"category\")} \n                                                checked={values.category === \"kitchen\"}\n                                                onClick={this.continue}\n                                                >\n                                                </input>\n                                                <CustomCardRadio \n                                                img={kitchen} \n                                                Title={\"Kitchen\"}\n                                                ></CustomCardRadio>\n                                            </label>\n                                            <label>\n                                                <input\n                                                type=\"radio\"\n                                                value=\"bathroom\"                            \n                                                onChange={onValueChange(\"category\")} \n                                                checked={values.category === \"bathroom\"}\n                                                onClick={this.continue}\n                                                >\n                                                </input>\n                                                <CustomCardRadio \n                                                img={bathroom} \n                                                Title={\"Bathroom\"}\n                                                ></CustomCardRadio>\n                                            </label>\n                                            <label>\n                                                <input\n                                                type=\"radio\"\n                                                value=\"flooring\"                            \n                                                onChange={onValueChange(\"category\")} \n                                                checked={values.category === \"flooring\"}\n                                                onClick={this.continue}\n                                                >\n                                                </input>\n                                                <CustomCardRadio \n                                                img={flooring} \n                                                Title={\"Flooring\"}\n                                                ></CustomCardRadio>\n                                            </label>\n                                            <label>\n                                                <input\n                                                type=\"radio\"\n                                                value=\"windows\"                            \n                                                onChange={onValueChange(\"category\")} \n                                                checked={values.category === \"windows\"}\n                                                onClick={this.continue}\n                                                >\n                                                </input>\n                                                <CustomCardRadio \n                                                img={windows} \n                                                Title={\"Windows\"}\n                                                ></CustomCardRadio>\n                                            </label>\n                                            <label>\n                                                <input\n                                                type=\"radio\"\n                                                value=\"roofing\"                            \n                                                onChange={onValueChange(\"category\")} \n                                                checked={values.category === \"roofing\"}\n                                                onClick={this.continue}\n                                                >\n                                                </input>\n                                                <CustomCardRadio \n                                                img={roofing} \n                                                Title={\"Roofing\"}\n                                                ></CustomCardRadio>\n                                            </label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </React.Fragment>\n            </MuiThemeProvider>\n        )\n    }\n}\n\nexport default SelectedForm\n","import React, { Component } from 'react';\n\nimport Basement from '../components/elements/basement/Basement';\nimport Bathroom from '../components/elements/bathroom/Bathroom';\nimport ExteriorSiding from '../components/elements/exteriorSiding/ExteriorSiding';\nimport Flooring from '../components/elements/flooring/Flooring';\nimport InteriorDesign from '../components/elements/interiorDesign/InteriorDesign';\nimport Kitchen from '../components/elements/kitchen/Kitchen';\nimport Painting from '../components/elements/painting/Painting';\nimport Roofing from '../components/elements/roofing/Roofing';\nimport Windows from '../components/elements/windows/Windows';\n\nimport Confirm from '../components/Confirm';\nimport Size from '../components/Size';\nimport Material from '../components/Material';\nimport SelectedForm from '../components/SelectedForm';\n\n\nexport class Home extends Component {\n    \n    constructor(){\n        super();\n        this.state = {\n            project: 0,\n            step: 1,\n            options: [],\n            rooms: [],\n            uniqrooms: [],\n            services: [],\n            uniqservices: [],\n            datas: [],\n            items: [],\n        };    \n        this.onValueChange = this.onValueChange.bind(this);\n    }\n\n    clearState(){\n        this.setState({\n            options: [],\n            uniqrooms: [],\n            uniqservices: [],\n            uniqOptions: [],\n            datas: [],\n            size : undefined,\n        })\n    }\n\n    //Proced to Next step\n    nextStep = () =>  {\n        const { step } = this.state;\n        this.setState({\n            step: step + 1\n        })\n    }\n\n    //Proced to Prev step\n    prevStep = () => {\n        const { step } = this.state;\n        this.setState({\n            step: step - 1,\n        })\n        this.clearState();\n    }\n\n    onValueChange = (option) => (event) => {\n        this.setState({\n            [option]: event.target.value\n        });\n    }\n\n    handleCheck = (options_checked) => (event) => {\n        this.setState({\n            [options_checked]: event.target.checked,\n        })\n        if (event.target.checked === true ) {\n            this.state.options.push(event.target.value)\n\n            let uniqs = this.state.options.filter((item, index) => this.state.options.indexOf(item) === index);\n            this.setState({\n                uniqOptions: uniqs\n            })\n\n            if (this.state.category === \"interior\") {\n                if (\n                    event.target.value === 'Kitchen' || \n                    event.target.value === 'Basement' || \n                    event.target.value === 'Living Room' || \n                    event.target.value === 'Bathroom' || \n                    event.target.value === 'Room' || \n                    event.target.value === 'Dining room' \n                ) {\n                    this.state.rooms.push(event.target.value)\n                    let uniqs = this.state.rooms.filter((item, index) => this.state.rooms.indexOf(item) === index);\n                    this.setState({\n                        uniqrooms: uniqs\n                    })\n                } else {\n                    this.state.services.push(event.target.value)\n                    let uniqs = this.state.services.filter((item, index) => this.state.services.indexOf(item) === index);\n                    this.setState({\n                        uniqservices: uniqs\n                    })\n                }\n            }\n        }\n\n        if (event.target.checked === false){\n            this.state.options.pop(event.target.value)\n            this.state.rooms.pop(event.target.value)\n            this.state.services.pop(event.target.value)\n            this.state.uniqOptions.pop(event.target.value)\n        }\n    }\n\n    gotoStep2 = () => {\n        this.setState({\n            step: 2,\n            options: [],\n            rooms: [],\n            services: [],\n            uniqOptions: []\n        })\n        this.clearState();\n    }\n\n    gotoSize = () => {\n        this.setState({\n            step: 4\n        })\n    }\n\n    gotoConfirm = () => {\n        this.setState({\n            step: 5\n        })\n    }\n\n    reset = () => {\n        this.clearState();\n        this.setState({\n            project: 0,\n            step: 1\n        });\n    }\n\n    add = () => {\n        this.setState({\n            project: this.state.project + 1,\n            options: [],\n            uniqrooms: [],\n            uniqservices: [],\n            uniqOptions: [],\n            size : undefined,\n            step: 1,\n            items: []\n        })\n    }\n\n    componentWillUpdate(nextProps, nextState){\n        // console.log(\"Next STATE :\", nextState);\n        // // console.log(\"STATE : \" , this.state);\n        // console.log(nextProps);\n    }\n    \n    render() {\n\n        const { step, project } = this.state;\n        const { category, renovation_type, roof_type } = this.state;\n        const values = { category, renovation_type, roof_type };\n        let {datas, ...other} = this.state;\n\n        switch (step) {\n            case 1:\n                return(\n                    <SelectedForm \n                        nextStep = {this.nextStep}\n                        onValueChange = {this.onValueChange}\n                        values = {values}\n                    ></SelectedForm>\n                );\n            case 2:\n                switch (category) {\n                    case 'kitchen':\n                        return(\n                           <Kitchen\n                           nextStep = {this.nextStep}\n                           prevStep = {this.prevStep}\n                           values = {values}\n                           onValueChange = {this.onValueChange}\n                           handleCheck = {this.handleCheck}\n                           ></Kitchen>\n                        );\n                    case 'basement':\n                        return(\n                            <Basement \n                            nextStep = {this.nextStep}\n                            prevStep = {this.prevStep}\n                            values = {values}\n                            onValueChange = {this.onValueChange}\n                            handleCheck = {this.handleCheck}\n                             ></Basement>\n                            );\n                    case 'bathroom':\n                        return(\n                            <Bathroom\n                            nextStep = {this.nextStep}\n                            prevStep = {this.prevStep}\n                            values = {values}\n                            onValueChange = {this.onValueChange}\n                            handleCheck = {this.handleCheck} \n                             ></Bathroom>\n                            );\n                    case 'exterior':\n                        return(\n                            <ExteriorSiding\n                            nextStep = {this.nextStep}\n                            prevStep = {this.prevStep}\n                            gotoSize = {this.gotoSize}\n                            values = {values}\n                            onValueChange = {this.onValueChange}\n                             ></ExteriorSiding>\n                            );\n                    case 'flooring':\n                        return(\n                            <Flooring\n                            nextStep = {this.nextStep}\n                            prevStep = {this.prevStep}\n                            values = {values}\n                            onValueChange = {this.onValueChange}\n                             ></Flooring>\n                            );\n                    case 'interior':\n                        return(\n                            <InteriorDesign\n                            nextStep = {this.nextStep}\n                            prevStep = {this.prevStep}\n                            gotoConfirm = {this.gotoConfirm}\n                            values = {values}\n                            uniqrooms = {this.state.uniqrooms}\n                            uniqservices = {this.state.uniqservices}\n                            onValueChange = {this.onValueChange}\n                            handleCheck = {this.handleCheck}\n                             ></InteriorDesign>\n                            );\n                    case 'painting':\n                        return(\n                            <Painting\n                            nextStep = {this.nextStep}\n                            prevStep = {this.prevStep}\n                            gotoSize = {this.gotoSize}\n                            values = {values}\n                            onValueChange = {this.onValueChange}\n                            handleCheck = {this.handleCheck}\n                             ></Painting>\n                            );\n                    case 'roofing':\n                        return(\n                            <Roofing\n                            nextStep = {this.nextStep}\n                            prevStep = {this.prevStep}\n                            gotoSize = {this.gotoSize}\n                            values = {values}\n                            onValueChange = {this.onValueChange}\n                             ></Roofing>\n                            );\n                    case 'windows':\n                        return(\n                            <Windows\n                            nextStep = {this.nextStep}\n                            prevStep = {this.prevStep}\n                            gotoConfirm = {this.gotoConfirm}\n                            values = {values}\n                            onValueChange = {this.onValueChange}\n                             ></Windows>\n                            )\n                    default:\n                        break;            \n                }\n                break\n            case 3:\n                return(\n                    <Material\n                    nextStep = {this.nextStep}\n                    prevStep = {this.prevStep}\n                    onValueChange = {this.onValueChange}\n                    values = {values}\n                    ></Material>\n                )   \n            case 4:\n                return(\n                    <Size\n                    nextStep = {this.nextStep}\n                    prevStep = {this.prevStep}\n                    onValueChange = {this.onValueChange}\n                    values = {values}\n                    gotoStep2 = {this.gotoStep2}\n                    size = {this.state.size}\n                    ></Size>\n                )\n            case 5:\n                return(\n                    <Confirm\n                    nextStep = {this.nextStep}\n                    prevStep = {this.prevStep}\n                    onValueChange = {this.onValueChange}\n                    gotoStep2 = {this.gotoStep2}\n                    data = {other}\n                    datas= {datas}\n                    reset = {this.reset}\n                    add = {this.add}\n                    project = {project}\n                    ></Confirm>\n                )\n            default:\n                break;\n        }\n    }\n}\n\nexport default Home\n","import './App.css';\nimport Home from './Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home></Home>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}